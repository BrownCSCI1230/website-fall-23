import{j as e}from"../../chunk-14d409af.js";import{I as t}from"../../chunk-66c40c41.js";import{M as n}from"../../chunk-b66c7dfa.js";const x={title:"Lab 10"};function o(r){const s=Object.assign({nav:"nav",ol:"ol",li:"li",a:"a",main:"main",h1:"h1",p:"p",div:"div",code:"code",h2:"h2",strong:"strong",h3:"h3",blockquote:"blockquote",em:"em",ul:"ul",pre:"pre",span:"span",h4:"h4","mjx-container":"mjx-container",svg:"svg",defs:"defs",path:"path",g:"g",use:"use",style:"style"},r.components);return e.exports.jsxs(e.exports.Fragment,{children:[e.exports.jsx(s.nav,{className:"toc",children:e.exports.jsx(s.ol,{className:"toc-level toc-level-1",children:e.exports.jsxs(s.li,{className:"toc-item toc-item-h1",children:[e.exports.jsx(s.a,{className:"toc-link toc-link-h1",href:"#lab-10-shaders",children:"Lab 10: Shaders"}),e.exports.jsxs(s.ol,{className:"toc-level toc-level-2",children:[e.exports.jsxs(s.li,{className:"toc-item toc-item-h2",children:[e.exports.jsx(s.a,{className:"toc-link toc-link-h2",href:"#introduction",children:"Introduction"}),e.exports.jsx(s.ol,{className:"toc-level toc-level-3",children:e.exports.jsx(s.li,{className:"toc-item toc-item-h3",children:e.exports.jsx(s.a,{className:"toc-link toc-link-h3",href:"#objectives",children:"Objectives"})})})]}),e.exports.jsxs(s.li,{className:"toc-item toc-item-h2",children:[e.exports.jsx(s.a,{className:"toc-link toc-link-h2",href:"#shaders-in-opengl",children:"Shaders In OpenGL"}),e.exports.jsxs(s.ol,{className:"toc-level toc-level-3",children:[e.exports.jsx(s.li,{className:"toc-item toc-item-h3",children:e.exports.jsx(s.a,{className:"toc-link toc-link-h3",href:"#vertex-shaders",children:"Vertex Shaders"})}),e.exports.jsx(s.li,{className:"toc-item toc-item-h3",children:e.exports.jsx(s.a,{className:"toc-link toc-link-h3",href:"#fragment-shaders",children:"Fragment Shaders"})}),e.exports.jsx(s.li,{className:"toc-item toc-item-h3",children:e.exports.jsx(s.a,{className:"toc-link toc-link-h3",href:"#glsl",children:"GLSL"})})]})]}),e.exports.jsxs(s.li,{className:"toc-item toc-item-h2",children:[e.exports.jsx(s.a,{className:"toc-link toc-link-h2",href:"#getting-started",children:"Getting Started"}),e.exports.jsx(s.ol,{className:"toc-level toc-level-3",children:e.exports.jsx(s.li,{className:"toc-item toc-item-h3",children:e.exports.jsx(s.a,{className:"toc-link toc-link-h3",href:"#stencil-code",children:"Stencil Code"})})})]}),e.exports.jsxs(s.li,{className:"toc-item toc-item-h2",children:[e.exports.jsx(s.a,{className:"toc-link toc-link-h2",href:"#cpu-side-code",children:"CPU-Side Code"}),e.exports.jsxs(s.ol,{className:"toc-level toc-level-3",children:[e.exports.jsx(s.li,{className:"toc-item toc-item-h3",children:e.exports.jsx(s.a,{className:"toc-link toc-link-h3",href:"#loading-shaders",children:"Loading Shaders"})}),e.exports.jsx(s.li,{className:"toc-item toc-item-h3",children:e.exports.jsx(s.a,{className:"toc-link toc-link-h3",href:"#using-shader-programs",children:"Using Shader Programs"})}),e.exports.jsxs(s.li,{className:"toc-item toc-item-h3",children:[e.exports.jsx(s.a,{className:"toc-link toc-link-h3",href:"#shader-input-and-output",children:"Shader Input And Output"}),e.exports.jsxs(s.ol,{className:"toc-level toc-level-4",children:[e.exports.jsx(s.li,{className:"toc-item toc-item-h4",children:e.exports.jsx(s.a,{className:"toc-link toc-link-h4",href:"#vertex-attributes",children:"Vertex Attributes"})}),e.exports.jsx(s.li,{className:"toc-item toc-item-h4",children:e.exports.jsx(s.a,{className:"toc-link toc-link-h4",href:"#passing-data-from-vertex-to-fragment-shaders",children:"Passing Data From Vertex To Fragment Shaders"})}),e.exports.jsx(s.li,{className:"toc-item toc-item-h4",children:e.exports.jsx(s.a,{className:"toc-link toc-link-h4",href:"#uniforms",children:"Uniforms"})})]})]})]})]}),e.exports.jsxs(s.li,{className:"toc-item toc-item-h2",children:[e.exports.jsx(s.a,{className:"toc-link toc-link-h2",href:"#vertex-shaders-1",children:"Vertex Shaders"}),e.exports.jsxs(s.ol,{className:"toc-level toc-level-3",children:[e.exports.jsx(s.li,{className:"toc-item toc-item-h3",children:e.exports.jsx(s.a,{className:"toc-link toc-link-h3",href:"#transformations-in-a-vertex-shader",children:"Transformations In A Vertex Shader"})}),e.exports.jsx(s.li,{className:"toc-item toc-item-h3",children:e.exports.jsx(s.a,{className:"toc-link toc-link-h3",href:"#default-outputs",children:"Default Outputs"})})]})]}),e.exports.jsxs(s.li,{className:"toc-item toc-item-h2",children:[e.exports.jsx(s.a,{className:"toc-link toc-link-h2",href:"#fragment-shaders-1",children:"Fragment Shaders"}),e.exports.jsx(s.ol,{className:"toc-level toc-level-3",children:e.exports.jsx(s.li,{className:"toc-item toc-item-h3",children:e.exports.jsx(s.a,{className:"toc-link toc-link-h3",href:"#default-outputs-1",children:'"Default" Outputs'})})})]}),e.exports.jsxs(s.li,{className:"toc-item toc-item-h2",children:[e.exports.jsx(s.a,{className:"toc-link toc-link-h2",href:"#phong-illumination",children:"Phong Illumination"}),e.exports.jsxs(s.ol,{className:"toc-level toc-level-3",children:[e.exports.jsx(s.li,{className:"toc-item toc-item-h3",children:e.exports.jsx(s.a,{className:"toc-link toc-link-h3",href:"#ambient-lighting",children:"Ambient Lighting"})}),e.exports.jsx(s.li,{className:"toc-item toc-item-h3",children:e.exports.jsx(s.a,{className:"toc-link toc-link-h3",href:"#diffuse-lighting",children:"Diffuse Lighting"})}),e.exports.jsx(s.li,{className:"toc-item toc-item-h3",children:e.exports.jsx(s.a,{className:"toc-link toc-link-h3",href:"#specular-component",children:"Specular Component"})})]})]}),e.exports.jsx(s.li,{className:"toc-item toc-item-h2",children:e.exports.jsx(s.a,{className:"toc-link toc-link-h2",href:"#end",children:"End"})}),e.exports.jsx(s.li,{className:"toc-item toc-item-h2",children:e.exports.jsx(s.a,{className:"toc-link toc-link-h2",href:"#submission",children:"Submission"})})]})]})})}),e.exports.jsxs(s.main,{children:[`
`,`
`,e.exports.jsx(s.h1,{id:"lab-10-shaders",children:e.exports.jsx(s.a,{href:"#lab-10-shaders",children:"Lab 10: Shaders"})}),`
`,e.exports.jsx(s.p,{children:e.exports.jsx(s.a,{href:"https://classroom.github.com/a/RSzv3QsV",target:"_blank",rel:"noopener noreferrer",children:"Github Classroom assignment"})}),`
`,e.exports.jsx(s.div,{className:"task-no-number-callout callout",children:e.exports.jsxs(s.p,{children:["Please put your answers to written questions in this lab, if any, in a Markdown file named ",e.exports.jsx(s.code,{children:"README.md"})," in your lab repo."]})}),`
`,e.exports.jsx(s.h2,{id:"introduction",children:e.exports.jsx(s.a,{href:"#introduction",children:"Introduction"})}),`
`,e.exports.jsx(s.p,{children:"Welcome to the Shaders Lab!"}),`
`,e.exports.jsx(s.p,{children:"In lab 9, you used VBOs and VAOs to pass vertex data to the GPU in the form of vertex attributes. Now, it's time to learn how to use that data to actually render images. To do this, we'll be writing (and learning about) shaders."}),`
`,e.exports.jsxs(s.p,{children:["Fundamentally, a ",e.exports.jsx(s.strong,{children:"shader"})," is just a program that gets run on the GPU. Because they are ",e.exports.jsx(s.strong,{children:"inherently parallelizable"}),", shaders allow us to efficiently apply coordinate transforms, compute Phong lighting, and even implement fancy post-processing effects. However, running things on the GPU does make data handling a little more complicated, as you'll soon find out."]}),`
`,e.exports.jsx(s.h3,{id:"objectives",children:e.exports.jsx(s.a,{href:"#objectives",children:"Objectives"})}),`
`,e.exports.jsxs(s.ol,{children:[`
`,e.exports.jsxs(s.li,{children:["Understand the differences between ",e.exports.jsx(s.strong,{children:"vertex"})," and ",e.exports.jsx(s.strong,{children:"fragment"})," shaders."]}),`
`,e.exports.jsxs(s.li,{children:["Learn to pass ",e.exports.jsx(s.strong,{children:"inputs"})," and ",e.exports.jsx(s.strong,{children:"outputs"})," to and from shaders, and"]}),`
`,e.exports.jsxs(s.li,{children:["Write, compile and use your own ",e.exports.jsx(s.strong,{children:"Phong illumination"})," shader using GLSL."]}),`
`]}),`
`,e.exports.jsx(s.h2,{id:"shaders-in-opengl",children:e.exports.jsx(s.a,{href:"#shaders-in-opengl",children:"Shaders In OpenGL"})}),`
`,e.exports.jsx(t,{images:[{src:"/labs/lab11/pipeline.png",alt:"TODO"}],figNumber:1,targetWidth:"100%",figCaption:"The OpenGL pipeline. In this lab, we'll be working on the vertex and fragment shader stages."}),`
`,e.exports.jsxs(s.p,{children:["There are two types of shaders you will be writing for this lab: ",e.exports.jsx(s.strong,{children:"vertex"})," and ",e.exports.jsx(s.strong,{children:"fragment"})," shaders."]}),`
`,e.exports.jsxs("details",{children:[e.exports.jsx("summary",{children:"Extra: other types of shaders"}),e.exports.jsxs(s.p,{children:["OpenGL also supports ",e.exports.jsx(s.a,{href:"https://learnopengl.com/Advanced-OpenGL/Geometry-Shader",target:"_blank",rel:"noopener noreferrer",children:"geometry shaders"}),", ",e.exports.jsx(s.a,{href:"https://learnopengl.com/Guest-Articles/2021/Tessellation/Tessellation",target:"_blank",rel:"noopener noreferrer",children:"tessellation shaders"}),", and ",e.exports.jsx(s.a,{href:"https://antongerdelan.net/opengl/compute.html",target:"_blank",rel:"noopener noreferrer",children:"compute shaders"}),". You won't be required to use these for any of your work in this course, though you are welcome to explore them in your final project."]})]}),`
`,e.exports.jsx(s.h3,{id:"vertex-shaders",children:e.exports.jsx(s.a,{href:"#vertex-shaders",children:"Vertex Shaders"})}),`
`,e.exports.jsxs(s.p,{children:["The ",e.exports.jsx(s.strong,{children:"vertex shader"})," is the first shader run in the OpenGL pipeline. It acts directly on ",e.exports.jsx(s.strong,{children:"vertices"})," (i.e. VAO/VBO data), so it's usually used to perform pre-processing transformations or other per-vertex computations."]}),`
`,e.exports.jsxs(s.p,{children:["The vertex shader is responsible for producing the final ",e.exports.jsx(s.strong,{children:"position"})," of the vertex it acts on."]}),`
`,e.exports.jsx(s.h3,{id:"fragment-shaders",children:e.exports.jsx(s.a,{href:"#fragment-shaders",children:"Fragment Shaders"})}),`
`,e.exports.jsxs(s.p,{children:["On the other hand, the ",e.exports.jsx(s.strong,{children:"fragment shader"})," is run much later in the pipeline. As its name implies, it acts on ",e.exports.jsx(s.strong,{children:"fragments"}),"."]}),`
`,e.exports.jsxs(s.p,{children:["The fragment shader is responsible for computing the ",e.exports.jsx(s.strong,{children:"final color"})," of the fragment it acts on."]}),`
`,e.exports.jsxs(s.blockquote,{children:[`
`,e.exports.jsxs(s.p,{children:["A ",e.exports.jsx(s.strong,{children:"fragment"}),' is a pixel-sized piece of a triangle. You can think of a fragment as a "potential pixel"\u2014these fragments come out of the rasterization step, where triangles are broken down into fragments.']}),`
`]}),`
`,e.exports.jsxs("details",{children:[e.exports.jsx("summary",{children:"Extra: on the definition of a fragment"}),e.exports.jsx(s.p,{children:`The definition we've provided above isn't the "whole truth", but it is sufficient for our purposes in CS 1230.`}),e.exports.jsx(s.p,{children:"There are subtle differences between actual pixels and fragments. For instance, a fragment may be smaller than one pixel, if OpenGL is configured to do multisampling (i.e. produce multiple samples per pixel)."}),e.exports.jsxs(s.p,{children:["If you're interested to find out more, the responses to this ",e.exports.jsx(s.a,{href:"https://stackoverflow.com/questions/31173002/what-is-the-difference-between-a-sample-a-pixel-and-a-fragment",target:"_blank",rel:"noopener noreferrer",children:"StackOverflow question"})," can be quite ",e.exports.jsx(s.em,{children:"illuminating"}),"!"]})]}),`
`,e.exports.jsx(s.h3,{id:"glsl",children:e.exports.jsx(s.a,{href:"#glsl",children:"GLSL"})}),`
`,e.exports.jsxs(s.p,{children:["Shaders are written in the ",e.exports.jsx(s.strong,{children:"OpenGL Shading Language"})," (GLSL)."]}),`
`,e.exports.jsxs(s.p,{children:["A set of shaders which implements the ones used in the OpenGL pipeline (minimally, a vertex shader linked with a fragment shader) is called a ",e.exports.jsx(s.strong,{children:"GLSL program"}),"."]}),`
`,e.exports.jsx(s.p,{children:"In this lab, you will write a GLSL program which you will then use in your code\u2014equivalently, you will write a vertex shader and a fragment shader. To get a quick overview of how to write GLSL, take a look at the dropdown below:"}),`
`,e.exports.jsxs("details",{children:[e.exports.jsx("summary",{children:"GLSL Syntax Speedrun"}),e.exports.jsx(s.p,{children:"GLSL has syntax very similar to C. Common data types include:"}),e.exports.jsxs(s.ul,{children:[`
`,e.exports.jsxs(s.li,{children:[e.exports.jsx(s.code,{children:"float"}),", ",e.exports.jsx(s.code,{children:"int"}),", ",e.exports.jsx(s.code,{children:"bool"})]}),`
`,e.exports.jsxs(s.li,{children:[e.exports.jsx(s.code,{children:"vec2"}),", ",e.exports.jsx(s.code,{children:"vec3"}),", ",e.exports.jsx(s.code,{children:"vec4"})]}),`
`,e.exports.jsxs(s.li,{children:[e.exports.jsx(s.code,{children:"mat2"}),", ",e.exports.jsx(s.code,{children:"mat3"}),", ",e.exports.jsx(s.code,{children:"mat4"})]}),`
`]}),e.exports.jsx(s.p,{children:"Also supported are:"}),e.exports.jsxs(s.ul,{children:[`
`,e.exports.jsxs(s.li,{children:["arrays using ",e.exports.jsx(s.code,{children:"[]"})," syntax like C"]}),`
`,e.exports.jsx(s.li,{children:"structs"}),`
`]}),e.exports.jsx(s.p,{children:"GLSL includes a number of helpful predefined functions, including:"}),e.exports.jsxs(s.ul,{children:[`
`,e.exports.jsxs(s.li,{children:[e.exports.jsx(s.code,{children:"sin"}),", ",e.exports.jsx(s.code,{children:"cos"}),", ",e.exports.jsx(s.code,{children:"tan"}),", etc..."]}),`
`,e.exports.jsxs(s.li,{children:[e.exports.jsx(s.code,{children:"pow"}),", ",e.exports.jsx(s.code,{children:"exp"}),", ",e.exports.jsx(s.code,{children:"log"}),", etc..."]}),`
`,e.exports.jsxs(s.li,{children:[e.exports.jsx(s.code,{children:"cross"}),", ",e.exports.jsx(s.code,{children:"dot"}),", ",e.exports.jsx(s.code,{children:"inverse"}),", ",e.exports.jsx(s.code,{children:"transpose"})]}),`
`]}),e.exports.jsx(s.p,{children:"You can also write your own functions:"}),e.exports.jsx(s.pre,{className:"language-glsl",children:e.exports.jsxs(s.code,{className:"language-glsl code-highlight",children:[e.exports.jsx(s.span,{className:"code-line",children:`returnType functionName(argType argName, ... etc.) {
`}),e.exports.jsxs(s.span,{className:"code-line",children:["  ",e.exports.jsx(s.span,{className:"pl-c",children:"// Your code here"}),`
`]}),e.exports.jsx(s.span,{className:"code-line",children:`}
`})]})}),e.exports.jsx(s.div,{className:"success-callout callout",children:e.exports.jsxs(s.p,{children:["Khronos provides an official ",e.exports.jsx(s.a,{href:"https://www.khronos.org/files/opengl45-quick-reference-card.pdf#page=9",target:"_blank",rel:"noopener noreferrer",children:'"quick reference card"'})," for GLSL. This is a dense(!) but complete listing of available types and functions in GLSL."]})})]}),`
`,e.exports.jsx(s.h2,{id:"getting-started",children:e.exports.jsx(s.a,{href:"#getting-started",children:"Getting Started"})}),`
`,e.exports.jsx(s.h3,{id:"stencil-code",children:e.exports.jsx(s.a,{href:"#stencil-code",children:"Stencil Code"})}),`
`,e.exports.jsx(s.p,{children:"In this lab, you will be working within the following files:"}),`
`,e.exports.jsxs(s.ul,{children:[`
`,e.exports.jsxs(s.li,{children:[e.exports.jsx(s.code,{children:"default.vert"}),": the vertex shader,"]}),`
`,e.exports.jsxs(s.li,{children:[e.exports.jsx(s.code,{children:"default.frag"}),": the fragment shader, and"]}),`
`,e.exports.jsxs(s.li,{children:[e.exports.jsx(s.code,{children:"glrenderer.cpp"}),": specifically, two functions:",`
`,e.exports.jsxs(s.ul,{children:[`
`,e.exports.jsxs(s.li,{children:[e.exports.jsx(s.code,{children:"initializeGL()"}),", which prepares everything before rendering, and"]}),`
`,e.exports.jsxs(s.li,{children:[e.exports.jsx(s.code,{children:"paintGL()"}),", which is called every frame to perform the actual rendering."]}),`
`]}),`
`]}),`
`]}),`
`,e.exports.jsx(s.p,{children:"Much of the application has already been written for you. This includes:"}),`
`,e.exports.jsxs(s.ul,{children:[`
`,e.exports.jsxs(s.li,{children:[e.exports.jsx(s.code,{children:"generateSphereData()"}),", a function which generates ",e.exports.jsx(s.em,{children:"only position data"})," for a sphere's vertices (recall that their normals can easily be computed as their normalized positions);"]}),`
`,e.exports.jsx(s.li,{children:"VAO- and VBO-related OpenGL calls needed to load the above data into the GPU; and"}),`
`,e.exports.jsxs(s.li,{children:["A ",e.exports.jsx(s.code,{children:"ShaderLoader"})," class, which you'll get to use shortly."]}),`
`]}),`
`,e.exports.jsx(s.h2,{id:"cpu-side-code",children:e.exports.jsx(s.a,{href:"#cpu-side-code",children:"CPU-Side Code"})}),`
`,e.exports.jsx(s.p,{children:"Before we can get into writing actual GLSL, we must first scaffold our application on the CPU side."}),`
`,e.exports.jsx(s.h3,{id:"loading-shaders",children:e.exports.jsx(s.a,{href:"#loading-shaders",children:"Loading Shaders"})}),`
`,e.exports.jsxs(s.p,{children:["First of all, you're going to want to be able to ",e.exports.jsx(s.strong,{children:"load, compile, and link"})," the vertex and fragment shaders that you'll be writing."]}),`
`,e.exports.jsxs(s.p,{children:["This requires a sizeable amount of boilerplate code that doesn't have much pedagogical value. Thus, we've provided you with the ",e.exports.jsx(s.code,{children:"ShaderLoader"})," class, which implements a static method, ",e.exports.jsx(s.code,{children:"createShaderProgram()"}),", which you can use to handle this."]}),`
`,e.exports.jsxs(s.p,{children:[e.exports.jsx(s.code,{children:"ShaderLoader::createShaderProgram()"})," takes in the filepaths to the vertex and fragment shader and does all the preparatory work for you. The ",e.exports.jsx(s.code,{children:"programID"})," it returns can then be used with other OpenGL functions to ",e.exports.jsx(s.strong,{children:"activate"})," and ",e.exports.jsx(s.strong,{children:"deactivate the shader"})," for drawing (that said, this isn't as important in this lab, as we only have one shader program)."]}),`
`,e.exports.jsxs(s.div,{className:"task-callout callout",children:[e.exports.jsxs(s.p,{children:["Call ",e.exports.jsx(s.code,{children:"ShaderLoader::createShaderProgram()"})," in ",e.exports.jsx(s.code,{children:"initializeGL()"}),", and set ",e.exports.jsx(s.code,{children:"m_shader"}),` to the returned value.
Its arguments should be the paths to the vertex and fragment shaders in `,e.exports.jsx(s.code,{children:"resources/shaders/"}),"."]}),e.exports.jsxs(s.p,{children:["If you are using relative paths, remember to set Qt's working directory first. Alternatively, you can use ",e.exports.jsx(s.code,{children:":/"})," as a prefix to access files listed in the ",e.exports.jsx(s.code,{children:"CMakeLists.txt"})," under ",e.exports.jsx(s.code,{children:"qt_add_resources()"}),", without having to change your working directory (e.g. ",e.exports.jsx(s.code,{children:":/resources/shaders"}),")"]})]}),`
`,e.exports.jsx(s.h3,{id:"using-shader-programs",children:e.exports.jsx(s.a,{href:"#using-shader-programs",children:"Using Shader Programs"})}),`
`,e.exports.jsx(s.p,{children:"Now that we have a shader program, we can tell OpenGL that we wish to use it for rendering."}),`
`,e.exports.jsxs(s.p,{children:["In the same way you ",e.exports.jsx(s.em,{children:"bind"})," and ",e.exports.jsx(s.em,{children:"unbind"})," a vao, you need to ",e.exports.jsx(s.em,{children:"use"})," and ",e.exports.jsx(s.em,{children:"un-use"})," a shader program. This is done via the ",e.exports.jsx(s.code,{children:"glUseProgram()"})," function."]}),`
`,e.exports.jsxs(s.blockquote,{children:[`
`,e.exports.jsx(s.pre,{className:"language-cpp",children:e.exports.jsx(s.code,{className:"language-cpp code-highlight",children:e.exports.jsxs(s.span,{className:"code-line",children:[e.exports.jsx(s.span,{className:"pl-k",children:"void"})," ",e.exports.jsx(s.span,{className:"pl-en",children:"glUseProgram"}),`(GLuint program)
`]})})}),`
`,e.exports.jsxs(s.p,{children:[e.exports.jsxs(s.strong,{children:[e.exports.jsx(s.code,{children:"program"}),":"]})," the ID of the shader program you wish to draw with. Use ",e.exports.jsx(s.code,{children:"0"})," to unbind."]}),`
`]}),`
`,e.exports.jsx(s.div,{className:"task-callout callout",children:e.exports.jsxs(s.p,{children:["Call ",e.exports.jsx(s.code,{children:"glUseProgram()"})," with ",e.exports.jsx(s.code,{children:"m_shader"})," at the start of the render loop in ",e.exports.jsx(s.code,{children:"paintGL()"}),"."]})}),`
`,e.exports.jsx(s.div,{className:"task-callout callout",children:e.exports.jsxs(s.p,{children:["Then, call ",e.exports.jsx(s.code,{children:"glUseProgram()"})," with ",e.exports.jsx(s.code,{children:"0"})," at the end of the render loop in ",e.exports.jsx(s.code,{children:"paintGL()"}),"."]})}),`
`,e.exports.jsx(s.h3,{id:"shader-input-and-output",children:e.exports.jsx(s.a,{href:"#shader-input-and-output",children:"Shader Input And Output"})}),`
`,e.exports.jsxs(s.p,{children:["Since shaders run on the ",e.exports.jsx(s.em,{children:"GPU"}),", they don't have access to a lot of the data we normally have access to on the ",e.exports.jsx(s.em,{children:"CPU"}),". Fortunately, there are multiple ways to make data available for our shaders to use:"]}),`
`,e.exports.jsxs(s.ol,{children:[`
`,e.exports.jsx(s.li,{children:"Vertex attributes,"}),`
`,e.exports.jsx(s.li,{children:"Inputs/outputs between shaders, and"}),`
`,e.exports.jsx(s.li,{children:"Uniforms."}),`
`]}),`
`,e.exports.jsx(s.h4,{id:"vertex-attributes",children:e.exports.jsx(s.a,{href:"#vertex-attributes",children:"Vertex Attributes"})}),`
`,e.exports.jsxs(s.p,{children:["Vertex shaders can read in data contained in the VAO currently bound ",e.exports.jsx(s.em,{children:"at the time of drawing"}),'. To read in data from a VAO within a vertex shader, we can declare an "input variable" (using the ',e.exports.jsx(s.code,{children:"layout"})," and ",e.exports.jsx(s.code,{children:"in"})," keywords) at the top of the file:"]}),`
`,e.exports.jsxs(s.blockquote,{children:[`
`,e.exports.jsx(s.pre,{className:"language-glsl",children:e.exports.jsx(s.code,{className:"language-glsl code-highlight",children:e.exports.jsxs(s.span,{className:"code-line",children:[e.exports.jsx(s.span,{className:"pl-k",children:"layout"}),"(location ",e.exports.jsx(s.span,{className:"pl-k",children:"="})," ",e.exports.jsx(s.span,{className:"pl-k",children:"<"}),"index",e.exports.jsx(s.span,{className:"pl-k",children:">"}),") ",e.exports.jsx(s.span,{className:"pl-k",children:"in"})," ",e.exports.jsx(s.span,{className:"pl-k",children:"<"}),"data_type",e.exports.jsx(s.span,{className:"pl-k",children:">"})," ",e.exports.jsx(s.span,{className:"pl-k",children:"<"}),"variable_name",e.exports.jsx(s.span,{className:"pl-k",children:">"}),`
`]})})}),`
`,e.exports.jsxs(s.p,{children:[e.exports.jsxs(s.strong,{children:[e.exports.jsx(s.code,{children:"<index>"}),":"]})," this tells OpenGL which VAO attribute you would like to associate with this variable. Recall from lab 9 that, when defining a VAO attribute with ",e.exports.jsx(s.code,{children:"glVertexAttribPointer()"})," and ",e.exports.jsx(s.code,{children:"glEnableVertexAttribArray()"}),", you must provide an ",e.exports.jsx(s.code,{children:"index"})," argument. That's the same index used here."]}),`
`,e.exports.jsxs(s.p,{children:[e.exports.jsxs(s.strong,{children:[e.exports.jsx(s.code,{children:"<data_type>"}),":"]})," this can be any GLSL data types (",e.exports.jsx(s.code,{children:"float"}),", ",e.exports.jsx(s.code,{children:"vec3"}),", etc...), but it should match the data specified in the VAO."]}),`
`,e.exports.jsxs(s.p,{children:[e.exports.jsxs(s.strong,{children:[e.exports.jsx(s.code,{children:"<variable_name>"}),":"]})," the variable name that this data is bound to within the shader."]}),`
`]}),`
`,e.exports.jsxs("details",{children:[e.exports.jsx("summary",{children:"Example usage"}),e.exports.jsx(s.pre,{className:"language-glsl",children:e.exports.jsx(s.code,{className:"language-glsl code-highlight",children:e.exports.jsxs(s.span,{className:"code-line",children:[e.exports.jsx(s.span,{className:"pl-k",children:"layout"}),"(location ",e.exports.jsx(s.span,{className:"pl-k",children:"="})," ",e.exports.jsx(s.span,{className:"pl-c1",children:"0"}),") ",e.exports.jsx(s.span,{className:"pl-k",children:"in"})," ",e.exports.jsx(s.span,{className:"pl-k",children:"vec2"}),` position2d;
`]})})}),e.exports.jsxs(s.p,{children:["The inclusion of this line in our vertex shader allows us to access the VAO attribute with index ",e.exports.jsx(s.code,{children:"0"})," via the ",e.exports.jsx(s.code,{children:"position2d"})," input variable."]})]}),`
`,e.exports.jsxs(s.div,{className:"task-callout callout",children:[e.exports.jsxs(s.p,{children:["In ",e.exports.jsx(s.code,{children:"default.vert"})," (our vertex shader), declare an input ",e.exports.jsx(s.code,{children:"vec3"})," to hold the vertex's ",e.exports.jsx(s.strong,{children:"object-space"})," position from the VAO. In ",e.exports.jsx(s.code,{children:"initializeGL()"})," in ",e.exports.jsx(s.code,{children:"glrenderer.cpp"}),", we've already passed this in as a ",e.exports.jsx(s.em,{children:"vertex attribute"})," with index ",e.exports.jsx(s.code,{children:"0"})," for you."]}),e.exports.jsxs(s.blockquote,{children:[`
`,e.exports.jsxs(s.p,{children:["Soon, we'll have to compute both the ",e.exports.jsx(s.strong,{children:"world-space position"})," and ",e.exports.jsx(s.strong,{children:"world-space normal"})," of the vertex. However, as we're using sphere geometries in this lab, we can get normals via ",e.exports.jsx(s.code,{children:"normalize(position)"}),". That's why we're not passing normals in as attributes."]}),`
`]})]}),`
`,e.exports.jsx(s.h4,{id:"passing-data-from-vertex-to-fragment-shaders",children:e.exports.jsx(s.a,{href:"#passing-data-from-vertex-to-fragment-shaders",children:"Passing Data From Vertex To Fragment Shaders"})}),`
`,e.exports.jsx(s.p,{children:"Another way that we can make data available to shaders is by passing it along from earlier shaders, by declaring matching input and output variables. For example, to pass data from the vertex shader to the fragment shader, we can declare:"}),`
`,e.exports.jsxs(s.ol,{children:[`
`,e.exports.jsxs(s.li,{children:["An ",e.exports.jsxs(s.strong,{children:[e.exports.jsx(s.code,{children:"out"})," variable in the vertex shader"]}),", whose value must be set by the shader, and"]}),`
`,e.exports.jsxs(s.li,{children:["A corresponding ",e.exports.jsxs(s.strong,{children:[e.exports.jsx(s.code,{children:"in"})," variable in the fragment shader"]}),"."]}),`
`]}),`
`,e.exports.jsx(s.pre,{className:"language-glsl",children:e.exports.jsxs(s.code,{className:"language-glsl code-highlight",children:[e.exports.jsxs(s.span,{className:"code-line",children:[e.exports.jsx(s.span,{className:"pl-c",children:"// At the top of the vertex shader"}),`
`]}),e.exports.jsxs(s.span,{className:"code-line",children:[e.exports.jsx(s.span,{className:"pl-k",children:"out"})," ",e.exports.jsx(s.span,{className:"pl-k",children:"<"}),"data_type",e.exports.jsx(s.span,{className:"pl-k",children:">"})," ",e.exports.jsx(s.span,{className:"pl-k",children:"<"}),"variable_name",e.exports.jsx(s.span,{className:"pl-k",children:">"}),`;
`]}),e.exports.jsx(s.span,{className:"code-line",children:`
`}),e.exports.jsxs(s.span,{className:"code-line",children:[e.exports.jsx(s.span,{className:"pl-c",children:"// Later, in the main function:"}),`
`]}),e.exports.jsxs(s.span,{className:"code-line",children:[e.exports.jsx(s.span,{className:"pl-k",children:"<"}),"variable_name",e.exports.jsx(s.span,{className:"pl-k",children:">"})," ",e.exports.jsx(s.span,{className:"pl-k",children:"="}),` some_value;
`]})]})}),`
`,e.exports.jsx(s.pre,{className:"language-glsl",children:e.exports.jsxs(s.code,{className:"language-glsl code-highlight",children:[e.exports.jsxs(s.span,{className:"code-line",children:[e.exports.jsx(s.span,{className:"pl-c",children:"// At the top of the fragment shader"}),`
`]}),e.exports.jsxs(s.span,{className:"code-line",children:[e.exports.jsx(s.span,{className:"pl-k",children:"in"})," ",e.exports.jsx(s.span,{className:"pl-k",children:"<"}),"data_type",e.exports.jsx(s.span,{className:"pl-k",children:">"})," ",e.exports.jsx(s.span,{className:"pl-k",children:"<"}),"variable_name",e.exports.jsx(s.span,{className:"pl-k",children:">"}),`;
`]})]})}),`
`,e.exports.jsx(s.div,{className:"warning-callout callout",children:e.exports.jsxs(s.p,{children:["In order for OpenGL to correctly link a pair of input and output variables, they ",e.exports.jsx(s.em,{children:"must"})," have the same ",e.exports.jsx(s.code,{children:"<data_type>"})," and ",e.exports.jsx(s.code,{children:"<variable_name>"}),"."]})}),`
`,e.exports.jsxs(s.div,{className:"task-callout callout",children:[e.exports.jsxs(s.p,{children:["Declare two pairs of ",e.exports.jsx(s.code,{children:"in/out"})," variables to pass the vertex's ",e.exports.jsx(s.strong,{children:"world-space position"})," and ",e.exports.jsx(s.strong,{children:"world-space normal"})," from the vertex shader to the fragment shader."]}),e.exports.jsxs(s.p,{children:["These variables (specifically, the ",e.exports.jsx(s.code,{children:"out"})," ones) will be given values later, in task 8."]})]}),`
`,e.exports.jsxs("details",{children:[e.exports.jsx("summary",{children:"Note: on the interpolation of per-vertex data to per-fragment data"}),e.exports.jsx(s.p,{children:"You may wonder how we can pass data from a vertex to a fragment shader, when there are almost always more fragments than vertices."}),e.exports.jsx(s.p,{children:"Each fragment's input value is produced via barycentric interpolation of the output values from the three vertices of the triangle which contain that fragment."}),e.exports.jsx(s.p,{children:"For example, in the figure below (reproduced from Lab 9), the three vertices only have red, green, and blue colors defined on them; these values are interpolated to produce input colors for each fragment."}),e.exports.jsx(t,{images:[{src:"/labs/lab9/FinalTriangle.png",alt:"TODO"}],figNumber:2,targetWidth:"95%",figCaption:"Colorful Triangle"})]}),`
`,e.exports.jsx(s.h4,{id:"uniforms",children:e.exports.jsx(s.a,{href:"#uniforms",children:"Uniforms"})}),`
`,e.exports.jsxs(s.p,{children:["What if we'd like to provide some data that applies to all vertices/fragments? This is where ",e.exports.jsx(s.strong,{children:"uniforms"})," come in. Uniforms can be accessed from within shaders using the following declaration:"]}),`
`,e.exports.jsx(s.pre,{className:"language-glsl",children:e.exports.jsx(s.code,{className:"language-glsl code-highlight",children:e.exports.jsxs(s.span,{className:"code-line",children:[e.exports.jsx(s.span,{className:"pl-k",children:"uniform"})," ",e.exports.jsx(s.span,{className:"pl-k",children:"<"}),"data_type",e.exports.jsx(s.span,{className:"pl-k",children:">"})," ",e.exports.jsx(s.span,{className:"pl-k",children:"<"}),"variable_name",e.exports.jsx(s.span,{className:"pl-k",children:">"}),`;
`]})})}),`
`,e.exports.jsxs(s.p,{children:["Just like how we must declare VAO attributes in the CPU, we must also declare uniforms in the CPU. For this purpose, OpenGL provides a set of functions that start with ",e.exports.jsx(s.code,{children:"glUniform"}),"."]}),`
`,e.exports.jsx(s.p,{children:"Depending on the data type, the function signature differs slightly. The generic format of the call is:"}),`
`,e.exports.jsx(s.pre,{className:"language-cpp",children:e.exports.jsxs(s.code,{className:"language-cpp code-highlight",children:[e.exports.jsxs(s.span,{className:"code-line",children:[e.exports.jsx(s.span,{className:"pl-c",children:"// For scalar and vector data:"}),`
`]}),e.exports.jsxs(s.span,{className:"code-line",children:[e.exports.jsx(s.span,{className:"pl-en",children:"glUniform_______"}),`(GLuint location, <data_to_be_passed>);
`]}),e.exports.jsx(s.span,{className:"code-line",children:`
`}),e.exports.jsxs(s.span,{className:"code-line",children:[e.exports.jsx(s.span,{className:"pl-c",children:"// For matrices:"}),`
`]}),e.exports.jsxs(s.span,{className:"code-line",children:[e.exports.jsx(s.span,{className:"pl-en",children:"glUniformMatrix_______"}),`(GLuint location, <data_to_be_passed>);
`]})]})}),`
`,e.exports.jsxs(s.blockquote,{children:[`
`,e.exports.jsxs(s.p,{children:["Note: the underscores stand in for the size and type of the data (e.g. ",e.exports.jsx(s.code,{children:"glUniform3f()"}),"). For a full list of calls for various types, refer to this ",e.exports.jsx(s.a,{href:"https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform.xhtml",target:"_blank",rel:"noopener noreferrer",children:"reference page"}),"."]}),`
`]}),`
`,e.exports.jsxs(s.p,{children:["The first argument to this function is the ",e.exports.jsx(s.em,{children:"location"}),` of the uniform within the OpenGL state machine.
To get this value for a given shader uniform variable, we can use the function `,e.exports.jsx(s.code,{children:"glGetUniformLocation"}),"."]}),`
`,e.exports.jsxs(s.blockquote,{children:[`
`,e.exports.jsx(s.pre,{className:"language-cpp",children:e.exports.jsx(s.code,{className:"language-cpp code-highlight",children:e.exports.jsxs(s.span,{className:"code-line",children:["GLint ",e.exports.jsx(s.span,{className:"pl-en",children:"glGetUniformLocation"}),"(GLuint program, ",e.exports.jsx(s.span,{className:"pl-k",children:"const"}),` GLchar *name)
`]})})}),`
`,e.exports.jsxs(s.p,{children:[e.exports.jsxs(s.strong,{children:[e.exports.jsx(s.code,{children:"program"}),":"]})," the unique shader program ID. You got this in task 1, from ",e.exports.jsx(s.code,{children:"ShaderLoader"}),"."]}),`
`,e.exports.jsxs(s.p,{children:[e.exports.jsxs(s.strong,{children:[e.exports.jsx(s.code,{children:"name"}),":"]})," the name of the variable in the shader source code. For example: if you have a uniform called ",e.exports.jsx(s.code,{children:"color"})," declared in the fragment shader, you would use the string ",e.exports.jsx(s.code,{children:'"color"'})," for this argument."]}),`
`,e.exports.jsxs(s.p,{children:["The returned value is ",e.exports.jsx(s.code,{children:"-1"})," if the specified name cannot be found. Otherwise, we can pass the output GLint directly into ",e.exports.jsx(s.code,{children:"glUniform_"})," as the location parameter."]}),`
`]}),`
`,e.exports.jsxs("details",{children:[e.exports.jsx("summary",{children:"Important: how to pass matrices as uniforms"}),e.exports.jsx(s.p,{children:"This is the function you'll use most often to pass a matrix to the GPU as a uniform variable:"}),e.exports.jsx(s.p,{children:e.exports.jsx(s.code,{children:"glUniformMatrix4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)"})}),e.exports.jsxs(s.p,{children:["What does the ",e.exports.jsx(s.code,{children:"4fv"})," suffix mean?"]}),e.exports.jsxs(s.ul,{children:[`
`,e.exports.jsxs(s.li,{children:[e.exports.jsx(s.code,{children:"4"})," indicates that the matrix is ",e.exports.jsx(s.code,{children:"4x4"})]}),`
`,e.exports.jsxs(s.li,{children:[e.exports.jsx(s.code,{children:"f"})," indicates that the data type is ",e.exports.jsx(s.code,{children:"float"})]}),`
`,e.exports.jsxs(s.li,{children:[e.exports.jsx(s.code,{children:"v"})," indicates that the data is a vector (i.e. an array) of matrices. For some reason, there is no ",e.exports.jsx(s.code,{children:"glUniformMatrix4f"})," function that passes just a single matrix."]}),`
`]}),e.exports.jsxs(s.p,{children:["This function takes a few more arguments than the ",e.exports.jsx(s.code,{children:"glUniform_"})," functions we've seen so far:"]}),e.exports.jsxs(s.ul,{children:[`
`,e.exports.jsxs(s.li,{children:[e.exports.jsx(s.code,{children:"GLsizei count"}),": the number of matrices being passed in. You'll almost always use ",e.exports.jsx(s.code,{children:"1"})," here, unless you have reason to pass an array of matrices to your shaders."]}),`
`,e.exports.jsxs(s.li,{children:[e.exports.jsx(s.code,{children:"GLboolean transpose"}),": whether or not to transpose the matrix before passing it in. OpenGL expects the matrix to be in column major order. Luckily, ",e.exports.jsx(s.code,{children:"glm"})," already internally stores its matrices in this format, so when we're passing in a ",e.exports.jsx(s.code,{children:"glm"})," matrix, we can use ",e.exports.jsx(s.code,{children:"GL_FALSE"})," here."]}),`
`,e.exports.jsxs(s.li,{children:[e.exports.jsx(s.code,{children:"const GLfloat *value"}),": a pointer to the first element of the matrix you wish to send. For example: if you have a ",e.exports.jsx(s.code,{children:"glm::mat4"})," called ",e.exports.jsx(s.code,{children:"matrix"}),", you can get this pointer via ",e.exports.jsx(s.code,{children:"&matrix[0][0]"}),"."]}),`
`]}),e.exports.jsxs(s.p,{children:["Putting this all together: if we wanted to pass in a rotation matrix called ",e.exports.jsx(s.code,{children:"rotation"}),":"]}),e.exports.jsx(s.pre,{className:"language-cpp",children:e.exports.jsx(s.code,{className:"language-cpp code-highlight",children:e.exports.jsxs(s.span,{className:"code-line",children:[e.exports.jsx(s.span,{className:"pl-en",children:"glUniformMatrix4fv"}),"(matrixLocation, ",e.exports.jsx(s.span,{className:"pl-c1",children:"1"}),", GL_FALSE, &rotation[",e.exports.jsx(s.span,{className:"pl-c1",children:"0"}),"][",e.exports.jsx(s.span,{className:"pl-c1",children:"0"}),`]);
`]})})})]}),`
`,e.exports.jsxs(s.div,{className:"task-callout callout",children:[e.exports.jsxs(s.p,{children:["Declare a ",e.exports.jsx(s.code,{children:"uniform mat4"})," variable in the vertex shader to store the model matrix."]}),e.exports.jsxs(s.p,{children:["Then, in ",e.exports.jsx(s.code,{children:"paintGL()"}),", pass in ",e.exports.jsx(s.code,{children:"m_model"}),", a member variable storing the model matrix."]})]}),`
`,e.exports.jsx(s.h2,{id:"vertex-shaders-1",children:e.exports.jsx(s.a,{href:"#vertex-shaders-1",children:"Vertex Shaders"})}),`
`,e.exports.jsx(s.p,{children:"As we discussed earlier, a vertex shader is a program that runs on the GPU which operates on each vertex of the VAO that it is processing. In the code you'll be writing for this lab (and later projects), you'll use a vertex shader to apply transformations to vertices."}),`
`,e.exports.jsx(s.h3,{id:"transformations-in-a-vertex-shader",children:e.exports.jsx(s.a,{href:"#transformations-in-a-vertex-shader",children:"Transformations In A Vertex Shader"})}),`
`,e.exports.jsxs(s.p,{children:["To define the transformations a vertex undergoes from object space to world space, then to camera space, and finally ",e.exports.jsx(s.em,{children:"clip space"}),", we use the ",e.exports.jsx(s.strong,{children:"model"})," , ",e.exports.jsx(s.strong,{children:"view"}),", and ",e.exports.jsx(s.strong,{children:"projection"})," matrices."]}),`
`,e.exports.jsxs(s.p,{children:["In previous projects, you only computed model matrices (per-shape) and a view matrix (for the camera)). In OpenGL, however, a third matrix is necessary: we need it to warp our ",e.exports.jsx(s.strong,{children:"view frustum"})," in camera space into a ",e.exports.jsx(s.strong,{children:"canonical view volume"})," in clip space."]}),`
`,e.exports.jsx(t,{images:[{src:"/labs/lab10/corrdinate_space_diagram.png",alt:"TODO"}],figNumber:3,figCaption:"Coordinate spaces and their conversion matrices"}),`
`,e.exports.jsx(s.p,{children:"Naturally, to perform these coordinate transforms, we must pass these matrices into our vertex shader:"}),`
`,e.exports.jsx(s.div,{className:"task-callout callout",children:e.exports.jsxs(s.p,{children:["As in the previous task, pass ",e.exports.jsx(s.code,{children:"m_view"})," and ",e.exports.jsx(s.code,{children:"m_proj"})," into the vertex shader as uniforms."]})}),`
`,e.exports.jsx(s.p,{children:"Then, we can apply them to our vertices in the vertex shader:"}),`
`,e.exports.jsxs(s.div,{className:"task-callout callout",children:[e.exports.jsxs(s.p,{children:["Compute the ",e.exports.jsx(s.strong,{children:"world-space position"})," and ",e.exports.jsx(s.strong,{children:"world-space normal"})," of the vertex, using the model matrix and vertex position you obtained earlier via vertex attributes."]}),e.exports.jsxs(s.p,{children:["Using these results, set the variables for the world space position and normal you declared earlier using the ",e.exports.jsx(s.code,{children:"out"})," keyword."]}),e.exports.jsxs("details",{children:[e.exports.jsx("summary",{children:"How do I transform normals, again?"}),e.exports.jsxs(s.p,{children:["Recall from ",e.exports.jsx(s.a,{href:"https://docs.google.com/presentation/d/1WtW-3uwEzY2KMrfQSLuCXY-6GUFZ-zK2/edit#slide=id.p77",target:"_blank",rel:"noopener noreferrer",children:"this lecture"})," that when you transform normals, you have to use the inverse-transpose of the top-left ",e.exports.jsx(s.code,{children:"3x3"})," portion of the model matrix."]}),e.exports.jsxs(s.p,{children:["Consider the performance implications of computing this for ",e.exports.jsx(s.em,{children:"every single vertex"}),"... can you do better in project 5 & 6?"]})]})]}),`
`,e.exports.jsx(s.h3,{id:"default-outputs",children:e.exports.jsx(s.a,{href:"#default-outputs",children:"Default Outputs"})}),`
`,e.exports.jsxs(s.p,{children:[`There is one type of shader output we have not discussed yet: GLSL's "predefined" output variables. These are always implicitly defined by OpenGL. In this case, we only care about `,e.exports.jsx(s.code,{children:"gl_Position"}),"; you can read about the others ",e.exports.jsx(s.a,{href:"https://www.khronos.org/opengl/wiki/Vertex_Shader#Outputs",target:"_blank",rel:"noopener noreferrer",children:"here"}),"."]}),`
`,e.exports.jsxs(s.p,{children:[e.exports.jsx(s.code,{children:"gl_Position"})," is a ",e.exports.jsx(s.code,{children:"vec4"})," that represents the vertex's output position in ",e.exports.jsx(s.strong,{children:"clip space"}),". This is what OpenGL uses to actually place the vertex in the image when rendering. Note that you don't have to declare it yourself, as ",e.exports.jsx(s.code,{children:"gl_Position"})," is a built-in OpenGL variable."]}),`
`,e.exports.jsxs(s.div,{className:"task-callout callout",children:[e.exports.jsxs(s.p,{children:["Set ",e.exports.jsx(s.code,{children:"gl_Position"})," by converting the input object-space position to clip space. Remember to apply the MVP (model, view, projection) transformation's constituent matrices in the correct order!"]}),e.exports.jsxs("details",{children:[e.exports.jsx("summary",{children:"Wait, aren't we forgetting another step?"}),e.exports.jsxs(s.p,{children:["You may recall from lecture that, after using the projection matrix, you have to ",e.exports.jsx(s.strong,{children:"re-homogenize"})," the resulting coordinate to obtain a vertex's proper position in clip space."]}),e.exports.jsx(s.p,{children:"Fortunately for us, this is handled by OpenGL!"})]})]}),`
`,e.exports.jsx(s.h2,{id:"fragment-shaders-1",children:e.exports.jsx(s.a,{href:"#fragment-shaders-1",children:"Fragment Shaders"})}),`
`,e.exports.jsxs(s.p,{children:["As mentioned before, the fragment shader runs after the rasterization step of the pipeline, where each triangle has been converted into a set of ",e.exports.jsx(s.strong,{children:"fragments"})," for each pixel that the triangle covers. The fragment shader then computes the color of each fragment, given some ",e.exports.jsx(s.em,{children:"interpolated inputs"})," passed from the vertex shader."]}),`
`,e.exports.jsx(s.h3,{id:"default-outputs-1",children:e.exports.jsx(s.a,{href:"#default-outputs-1",children:'"Default" Outputs'})}),`
`,e.exports.jsxs(s.p,{children:["You might expect that just like vertex shaders have a default output called ",e.exports.jsx(s.code,{children:"gl_Position"}),", fragment shaders would have a similar default output. They used to, but this has been deprecated; now, all fragment shader outputs are specified explicitly with ",e.exports.jsx(s.code,{children:"out"})," variable declarations."]}),`
`,e.exports.jsxs(s.p,{children:["For the purposes of this lab (and most of the code you'll write in this course), this means you need to declare an ",e.exports.jsx(s.code,{children:"out vec4"})," variable and assign to it in the fragment shader's ",e.exports.jsx(s.code,{children:"main()"})," function. This output is then detected by OpenGL and is assumed to be the final output pixel color. This variable name does have the restriction of not being allowed to begin with ",e.exports.jsx(s.code,{children:"gl_"})," however, so be careful!"]}),`
`,e.exports.jsxs("details",{children:[e.exports.jsx("summary",{children:"Extra: more on fragment shader outputs"}),e.exports.jsxs(s.p,{children:['When we said "this output is then detected by OpenGL and is assumed to be the final output pixel color," we swept quite a bit under the rug. OpenGL can actually be configured to render images with many different output channels, each of which might be associated with a different fragment shader output. You can read more about the details behind fragment shader outputs here: ',e.exports.jsx(s.a,{href:"https://www.khronos.org/opengl/wiki/Fragment_Shader#Outputs",target:"_blank",rel:"noopener noreferrer",children:"https://www.khronos.org/opengl/wiki/Fragment_Shader#Outputs"})]})]}),`
`,e.exports.jsx(s.div,{className:"task-callout callout",children:e.exports.jsxs(s.p,{children:["Manually add a ",e.exports.jsx(s.code,{children:"vec4"})," named ",e.exports.jsx(s.code,{children:"fragColor"})," as an output to your fragment shader. For now, set it to ",e.exports.jsx(s.code,{children:"vec4(1.0)"})," in the fragment shader's ",e.exports.jsx(s.code,{children:"main()"})," function."]})}),`
`,e.exports.jsx(t,{images:[{src:"/labs/lab10/outputAfterWhite.png",alt:"TODO"}],figNumber:4,targetWidth:"50%",figCaption:"The white circle of minimum functionality"}),`
`,e.exports.jsx(s.p,{children:"You should now see a white circle like the one above when you run your code (if you don't, it's time to debug... \u{1F614})."}),`
`,e.exports.jsxs(s.div,{className:"task-callout callout",children:[e.exports.jsxs(s.p,{children:["Next, to verify your normals are correct, use the absolute value of your normal input variable's ",e.exports.jsx(s.code,{children:"x"}),", ",e.exports.jsx(s.code,{children:"y"})," and ",e.exports.jsx(s.code,{children:"z"})," components as the ",e.exports.jsx(s.code,{children:"r"}),", ",e.exports.jsx(s.code,{children:"g"}),", and ",e.exports.jsx(s.code,{children:"b"})," components of your fragment shader output."]}),e.exports.jsxs(s.p,{children:["As a hint, the following pattern is allowed in GLSL: ",e.exports.jsx(s.code,{children:"someVec4 = vec4(abs(someVec3), 1.0)"}),"."]}),e.exports.jsxs(s.p,{children:["After you're done, set the output color to black (i.e. ",e.exports.jsx(s.code,{children:"vec4(0.0)"}),") to get ready for the next part of the lab. This is optional\u2014you won't need this if you just overwrite your output color later."]})]}),`
`,e.exports.jsx(t,{images:[{src:"/labs/lab10/outputAfterNormals.png",alt:"TODO"}],figNumber:5,targetWidth:"50%",figCaption:"The output you should see if your normals are correct"}),`
`,e.exports.jsx(s.h2,{id:"phong-illumination",children:e.exports.jsx(s.a,{href:"#phong-illumination",children:"Phong Illumination"})}),`
`,e.exports.jsx(t,{images:[{src:"/labs/lab10/PhongModel.png",alt:"TODO"}],figNumber:6,figCaption:"Phong Model Components: Ambient, Diffuse, Specular"}),`
`,e.exports.jsx(s.p,{children:"Now that we've gone over the basics of vertex and fragment shaders, we're going to implement a basic version of the Phong illumination model."}),`
`,e.exports.jsx(s.p,{children:`You can think of the lab up to now as a "tutorial"\u2014but, from here on out, you'll be tasked with applying what you learned in a less guided environment. Make sure to reference earlier parts of the lab if you get stuck!`}),`
`,e.exports.jsx(s.p,{children:"Here's the lighting equation you'll be using:"}),`
`,e.exports.jsx(s.div,{className:"math math-display",children:e.exports.jsx(s["mjx-container"],{className:"MathJax",jax:"SVG",display:"true",children:e.exports.jsxs(s.svg,{style:{verticalAlign:"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"49.878ex",height:"2.943ex",role:"img",focusable:"false",viewBox:"0 -1051 22046.1 1301",xmlnsXlink:"http://www.w3.org/1999/xlink",children:[e.exports.jsxs(s.defs,{children:[e.exports.jsx(s.path,{id:"MJX-1-TEX-N-50",d:"M130 622Q123 629 119 631T103 634T60 637H27V683H214Q237 683 276 683T331 684Q419 684 471 671T567 616Q624 563 624 489Q624 421 573 372T451 307Q429 302 328 301H234V181Q234 62 237 58Q245 47 304 46H337V0H326Q305 3 182 3Q47 3 38 0H27V46H60Q102 47 111 49T130 61V622ZM507 488Q507 514 506 528T500 564T483 597T450 620T397 635Q385 637 307 637H286Q237 637 234 628Q231 624 231 483V342H302H339Q390 342 423 349T481 382Q507 411 507 488Z"}),e.exports.jsx(s.path,{id:"MJX-1-TEX-N-68",d:"M41 46H55Q94 46 102 60V68Q102 77 102 91T102 124T102 167T103 217T103 272T103 329Q103 366 103 407T103 482T102 542T102 586T102 603Q99 622 88 628T43 637H25V660Q25 683 27 683L37 684Q47 685 66 686T103 688Q120 689 140 690T170 693T181 694H184V367Q244 442 328 442Q451 442 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"}),e.exports.jsx(s.path,{id:"MJX-1-TEX-N-6F",d:"M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z"}),e.exports.jsx(s.path,{id:"MJX-1-TEX-N-6E",d:"M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"}),e.exports.jsx(s.path,{id:"MJX-1-TEX-N-67",d:"M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z"}),e.exports.jsx(s.path,{id:"MJX-1-TEX-N-20",d:""}),e.exports.jsx(s.path,{id:"MJX-1-TEX-N-49",d:"M328 0Q307 3 180 3T32 0H21V46H43Q92 46 106 49T126 60Q128 63 128 342Q128 620 126 623Q122 628 118 630T96 635T43 637H21V683H32Q53 680 180 680T328 683H339V637H317Q268 637 254 634T234 623Q232 620 232 342Q232 63 234 60Q238 55 242 53T264 48T317 46H339V0H328Z"}),e.exports.jsx(s.path,{id:"MJX-1-TEX-N-74",d:"M27 422Q80 426 109 478T141 600V615H181V431H316V385H181V241Q182 116 182 100T189 68Q203 29 238 29Q282 29 292 100Q293 108 293 146V181H333V146V134Q333 57 291 17Q264 -10 221 -10Q187 -10 162 2T124 33T105 68T98 100Q97 107 97 248V385H18V422H27Z"}),e.exports.jsx(s.path,{id:"MJX-1-TEX-N-65",d:"M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z"}),e.exports.jsx(s.path,{id:"MJX-1-TEX-N-73",d:"M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z"}),e.exports.jsx(s.path,{id:"MJX-1-TEX-N-69",d:"M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z"}),e.exports.jsx(s.path,{id:"MJX-1-TEX-N-79",d:"M69 -66Q91 -66 104 -80T118 -116Q118 -134 109 -145T91 -160Q84 -163 97 -166Q104 -168 111 -168Q131 -168 148 -159T175 -138T197 -106T213 -75T225 -43L242 0L170 183Q150 233 125 297Q101 358 96 368T80 381Q79 382 78 382Q66 385 34 385H19V431H26L46 430Q65 430 88 429T122 428Q129 428 142 428T171 429T200 430T224 430L233 431H241V385H232Q183 385 185 366L286 112Q286 113 332 227L376 341V350Q376 365 366 373T348 383T334 385H331V431H337H344Q351 431 361 431T382 430T405 429T422 429Q477 429 503 431H508V385H497Q441 380 422 345Q420 343 378 235T289 9T227 -131Q180 -204 113 -204Q69 -204 44 -177T19 -116Q19 -89 35 -78T69 -66Z"}),e.exports.jsx(s.path,{id:"MJX-1-TEX-N-3D",d:"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"}),e.exports.jsx(s.path,{id:"MJX-1-TEX-I-1D43E",d:"M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z"}),e.exports.jsx(s.path,{id:"MJX-1-TEX-I-1D44E",d:"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"}),e.exports.jsx(s.path,{id:"MJX-1-TEX-N-2B",d:"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"}),e.exports.jsx(s.path,{id:"MJX-1-TEX-I-1D451",d:"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"}),e.exports.jsx(s.path,{id:"MJX-1-TEX-N-2217",d:"M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"}),e.exports.jsx(s.path,{id:"MJX-1-TEX-N-28",d:"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"}),e.exports.jsx(s.path,{id:"MJX-1-TEX-I-1D45B",d:"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"}),e.exports.jsx(s.path,{id:"MJX-1-TEX-N-5E",d:"M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z"}),e.exports.jsx(s.path,{id:"MJX-1-TEX-N-22C5",d:"M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"}),e.exports.jsx(s.path,{id:"MJX-1-TEX-I-1D43F",d:"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"}),e.exports.jsx(s.path,{id:"MJX-1-TEX-N-29",d:"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"}),e.exports.jsx(s.path,{id:"MJX-1-TEX-I-1D460",d:"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"}),e.exports.jsx(s.path,{id:"MJX-1-TEX-I-1D445",d:"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"}),e.exports.jsx(s.path,{id:"MJX-1-TEX-I-1D438",d:"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z"}),e.exports.jsx(s.path,{id:"MJX-1-TEX-I-1D441",d:"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"})]}),e.exports.jsx(s.g,{stroke:"currentColor",fill:"currentColor",strokeWidth:"0",transform:"scale(1,-1)",children:e.exports.jsxs(s.g,{"data-mml-node":"math",children:[e.exports.jsxs(s.g,{"data-mml-node":"mtext",children:[e.exports.jsx(s.use,{"data-c":"50",xlinkHref:"#MJX-1-TEX-N-50"}),e.exports.jsx(s.use,{"data-c":"68",xlinkHref:"#MJX-1-TEX-N-68",transform:"translate(681,0)"}),e.exports.jsx(s.use,{"data-c":"6F",xlinkHref:"#MJX-1-TEX-N-6F",transform:"translate(1237,0)"}),e.exports.jsx(s.use,{"data-c":"6E",xlinkHref:"#MJX-1-TEX-N-6E",transform:"translate(1737,0)"}),e.exports.jsx(s.use,{"data-c":"67",xlinkHref:"#MJX-1-TEX-N-67",transform:"translate(2293,0)"}),e.exports.jsx(s.use,{"data-c":"20",xlinkHref:"#MJX-1-TEX-N-20",transform:"translate(2793,0)"}),e.exports.jsx(s.use,{"data-c":"49",xlinkHref:"#MJX-1-TEX-N-49",transform:"translate(3043,0)"}),e.exports.jsx(s.use,{"data-c":"6E",xlinkHref:"#MJX-1-TEX-N-6E",transform:"translate(3404,0)"}),e.exports.jsx(s.use,{"data-c":"74",xlinkHref:"#MJX-1-TEX-N-74",transform:"translate(3960,0)"}),e.exports.jsx(s.use,{"data-c":"65",xlinkHref:"#MJX-1-TEX-N-65",transform:"translate(4349,0)"}),e.exports.jsx(s.use,{"data-c":"6E",xlinkHref:"#MJX-1-TEX-N-6E",transform:"translate(4793,0)"}),e.exports.jsx(s.use,{"data-c":"73",xlinkHref:"#MJX-1-TEX-N-73",transform:"translate(5349,0)"}),e.exports.jsx(s.use,{"data-c":"69",xlinkHref:"#MJX-1-TEX-N-69",transform:"translate(5743,0)"}),e.exports.jsx(s.use,{"data-c":"74",xlinkHref:"#MJX-1-TEX-N-74",transform:"translate(6021,0)"}),e.exports.jsx(s.use,{"data-c":"79",xlinkHref:"#MJX-1-TEX-N-79",transform:"translate(6410,0)"})]}),e.exports.jsx(s.g,{"data-mml-node":"mo",transform:"translate(7215.8,0)",children:e.exports.jsx(s.use,{"data-c":"3D",xlinkHref:"#MJX-1-TEX-N-3D"})}),e.exports.jsxs(s.g,{"data-mml-node":"msub",transform:"translate(8271.6,0)",children:[e.exports.jsx(s.g,{"data-mml-node":"mi",children:e.exports.jsx(s.use,{"data-c":"1D43E",xlinkHref:"#MJX-1-TEX-I-1D43E"})}),e.exports.jsx(s.g,{"data-mml-node":"mi",transform:"translate(882,-150) scale(0.707)",children:e.exports.jsx(s.use,{"data-c":"1D44E",xlinkHref:"#MJX-1-TEX-I-1D44E"})})]}),e.exports.jsx(s.g,{"data-mml-node":"mo",transform:"translate(9799.8,0)",children:e.exports.jsx(s.use,{"data-c":"2B",xlinkHref:"#MJX-1-TEX-N-2B"})}),e.exports.jsxs(s.g,{"data-mml-node":"msub",transform:"translate(10800.1,0)",children:[e.exports.jsx(s.g,{"data-mml-node":"mi",children:e.exports.jsx(s.use,{"data-c":"1D43E",xlinkHref:"#MJX-1-TEX-I-1D43E"})}),e.exports.jsx(s.g,{"data-mml-node":"mi",transform:"translate(882,-150) scale(0.707)",children:e.exports.jsx(s.use,{"data-c":"1D451",xlinkHref:"#MJX-1-TEX-I-1D451"})})]}),e.exports.jsx(s.g,{"data-mml-node":"mo",transform:"translate(12322,0)",children:e.exports.jsx(s.use,{"data-c":"2217",xlinkHref:"#MJX-1-TEX-N-2217"})}),e.exports.jsx(s.g,{"data-mml-node":"mo",transform:"translate(13044.2,0)",children:e.exports.jsx(s.use,{"data-c":"28",xlinkHref:"#MJX-1-TEX-N-28"})}),e.exports.jsx(s.g,{"data-mml-node":"TeXAtom","data-mjx-texclass":"ORD",transform:"translate(13433.2,0)",children:e.exports.jsxs(s.g,{"data-mml-node":"mover",children:[e.exports.jsx(s.g,{"data-mml-node":"mi",children:e.exports.jsx(s.use,{"data-c":"1D45B",xlinkHref:"#MJX-1-TEX-I-1D45B"})}),e.exports.jsx(s.g,{"data-mml-node":"mo",transform:"translate(300,16) translate(-250 0)",children:e.exports.jsx(s.use,{"data-c":"5E",xlinkHref:"#MJX-1-TEX-N-5E"})})]})}),e.exports.jsx(s.g,{"data-mml-node":"mo",transform:"translate(14255.4,0)",children:e.exports.jsx(s.use,{"data-c":"22C5",xlinkHref:"#MJX-1-TEX-N-22C5"})}),e.exports.jsx(s.g,{"data-mml-node":"TeXAtom","data-mjx-texclass":"ORD",transform:"translate(14755.6,0)",children:e.exports.jsxs(s.g,{"data-mml-node":"mover",children:[e.exports.jsx(s.g,{"data-mml-node":"mi",children:e.exports.jsx(s.use,{"data-c":"1D43F",xlinkHref:"#MJX-1-TEX-I-1D43F"})}),e.exports.jsx(s.g,{"data-mml-node":"mo",transform:"translate(368.3,257) translate(-250 0)",children:e.exports.jsx(s.use,{"data-c":"5E",xlinkHref:"#MJX-1-TEX-N-5E"})})]})}),e.exports.jsx(s.g,{"data-mml-node":"mo",transform:"translate(15436.6,0)",children:e.exports.jsx(s.use,{"data-c":"29",xlinkHref:"#MJX-1-TEX-N-29"})}),e.exports.jsx(s.g,{"data-mml-node":"mo",transform:"translate(16047.9,0)",children:e.exports.jsx(s.use,{"data-c":"2B",xlinkHref:"#MJX-1-TEX-N-2B"})}),e.exports.jsxs(s.g,{"data-mml-node":"msub",transform:"translate(17048.1,0)",children:[e.exports.jsx(s.g,{"data-mml-node":"mi",children:e.exports.jsx(s.use,{"data-c":"1D43E",xlinkHref:"#MJX-1-TEX-I-1D43E"})}),e.exports.jsx(s.g,{"data-mml-node":"mi",transform:"translate(882,-150) scale(0.707)",children:e.exports.jsx(s.use,{"data-c":"1D460",xlinkHref:"#MJX-1-TEX-I-1D460"})})]}),e.exports.jsx(s.g,{"data-mml-node":"mo",transform:"translate(18311.7,0)",children:e.exports.jsx(s.use,{"data-c":"28",xlinkHref:"#MJX-1-TEX-N-28"})}),e.exports.jsx(s.g,{"data-mml-node":"TeXAtom","data-mjx-texclass":"ORD",transform:"translate(18700.7,0)",children:e.exports.jsxs(s.g,{"data-mml-node":"mover",children:[e.exports.jsx(s.g,{"data-mml-node":"mi",children:e.exports.jsx(s.use,{"data-c":"1D445",xlinkHref:"#MJX-1-TEX-I-1D445"})}),e.exports.jsx(s.g,{"data-mml-node":"mo",transform:"translate(462.8,257) translate(-250 0)",children:e.exports.jsx(s.use,{"data-c":"5E",xlinkHref:"#MJX-1-TEX-N-5E"})})]})}),e.exports.jsx(s.g,{"data-mml-node":"mo",transform:"translate(19681.9,0)",children:e.exports.jsx(s.use,{"data-c":"22C5",xlinkHref:"#MJX-1-TEX-N-22C5"})}),e.exports.jsx(s.g,{"data-mml-node":"TeXAtom","data-mjx-texclass":"ORD",transform:"translate(20182.2,0)",children:e.exports.jsxs(s.g,{"data-mml-node":"mover",children:[e.exports.jsx(s.g,{"data-mml-node":"mi",children:e.exports.jsx(s.use,{"data-c":"1D438",xlinkHref:"#MJX-1-TEX-I-1D438"})}),e.exports.jsx(s.g,{"data-mml-node":"mo",transform:"translate(471.8,254) translate(-250 0)",children:e.exports.jsx(s.use,{"data-c":"5E",xlinkHref:"#MJX-1-TEX-N-5E"})})]})}),e.exports.jsxs(s.g,{"data-mml-node":"msup",transform:"translate(20946.2,0)",children:[e.exports.jsx(s.g,{"data-mml-node":"mo",children:e.exports.jsx(s.use,{"data-c":"29",xlinkHref:"#MJX-1-TEX-N-29"})}),e.exports.jsx(s.g,{"data-mml-node":"mi",transform:"translate(422,413) scale(0.707)",children:e.exports.jsx(s.use,{"data-c":"1D441",xlinkHref:"#MJX-1-TEX-I-1D441"})})]})]})})]})})}),`
`,e.exports.jsx(s.p,{children:"Note that this is a simplified model compared to the one you implemented in the Ray projects: it doesn't deal with color or attenuation, and it assumes only one point light source."}),`
`,e.exports.jsx(s.h3,{id:"ambient-lighting",children:e.exports.jsx(s.a,{href:"#ambient-lighting",children:"Ambient Lighting"})}),`
`,e.exports.jsxs(s.p,{children:["To add the ambient component of our illumination model, we can use ",e.exports.jsx(s.span,{className:"math math-inline",children:e.exports.jsx(s["mjx-container"],{className:"MathJax",jax:"SVG",children:e.exports.jsxs(s.svg,{style:{verticalAlign:"-0.355ex"},xmlns:"http://www.w3.org/2000/svg",width:"2.955ex",height:"1.901ex",role:"img",focusable:"false",viewBox:"0 -683 1306.1 840.1",xmlnsXlink:"http://www.w3.org/1999/xlink",children:[e.exports.jsxs(s.defs,{children:[e.exports.jsx(s.path,{id:"MJX-2-TEX-I-1D43E",d:"M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z"}),e.exports.jsx(s.path,{id:"MJX-2-TEX-I-1D44E",d:"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"})]}),e.exports.jsx(s.g,{stroke:"currentColor",fill:"currentColor",strokeWidth:"0",transform:"scale(1,-1)",children:e.exports.jsx(s.g,{"data-mml-node":"math",children:e.exports.jsxs(s.g,{"data-mml-node":"msub",children:[e.exports.jsx(s.g,{"data-mml-node":"mi",children:e.exports.jsx(s.use,{"data-c":"1D43E",xlinkHref:"#MJX-2-TEX-I-1D43E"})}),e.exports.jsx(s.g,{"data-mml-node":"mi",transform:"translate(882,-150) scale(0.707)",children:e.exports.jsx(s.use,{"data-c":"1D44E",xlinkHref:"#MJX-2-TEX-I-1D44E"})})]})})})]})})})," directly. This can be passed into our fragment shader as a ",e.exports.jsx(s.strong,{children:"uniform"}),"."]}),`
`,e.exports.jsxs(s.div,{className:"task-callout callout",children:[e.exports.jsxs(s.p,{children:["You are given ",e.exports.jsx(s.code,{children:"m_ka"}),", a member variable in the ",e.exports.jsx(s.code,{children:"GLRenderer"})," class. Add this float value to your fragment shader's output color."]}),e.exports.jsxs("details",{children:[e.exports.jsx("summary",{children:"Hint: Step-by-step process"}),e.exports.jsxs(s.div,{className:"error-callout callout",children:[e.exports.jsx(s.p,{children:"Please try these tasks on your own first, and only look at the hints if you get stuck!"}),e.exports.jsx(s.p,{children:"You will have to perfectly understand this process by the time you work on project 5."})]}),e.exports.jsxs(s.ol,{children:[`
`,e.exports.jsxs(s.li,{children:["Declare a uniform float ",e.exports.jsx(s.code,{children:"k_a"})," in the fragment shader, to hold the ambient coefficient."]}),`
`,e.exports.jsxs(s.li,{children:["Pass ",e.exports.jsx(s.code,{children:"m_ka"})," into the shader from the CPU as a uniform."]}),`
`,e.exports.jsxs(s.li,{children:["Finally, set your output color to a ",e.exports.jsx(s.code,{children:"vec3"})," with components equal to ",e.exports.jsx(s.code,{children:"k_a"}),"."]}),`
`]})]})]}),`
`,e.exports.jsx(t,{images:[{src:"/labs/lab10/outputAfterAmbient.png",alt:"TODO"}],figNumber:7,targetWidth:"50%",figCaption:"Expected output after adding the ambient component to the fragment shader"}),`
`,e.exports.jsx(s.h3,{id:"diffuse-lighting",children:e.exports.jsx(s.a,{href:"#diffuse-lighting",children:"Diffuse Lighting"})}),`
`,e.exports.jsx(s.p,{children:"Next, let's add the diffuse component of the illumination model to our shader."}),`
`,e.exports.jsx(t,{images:[{src:"/labs/lab10/diffuse.png",alt:"TODO"}],figNumber:8,targetWidth:"50%",figCaption:"The diffuse component is proportional to the dot product between the normal and the light direction"}),`
`,e.exports.jsxs(s.p,{children:["Recall that the diffuse component in our simplified Phong model is ",e.exports.jsx(s.span,{className:"math math-inline",children:e.exports.jsx(s["mjx-container"],{className:"MathJax",jax:"SVG",children:e.exports.jsxs(s.svg,{style:{verticalAlign:"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"11.37ex",height:"2.943ex",role:"img",focusable:"false",viewBox:"0 -1051 5025.6 1301",xmlnsXlink:"http://www.w3.org/1999/xlink",children:[e.exports.jsxs(s.defs,{children:[e.exports.jsx(s.path,{id:"MJX-3-TEX-I-1D43E",d:"M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z"}),e.exports.jsx(s.path,{id:"MJX-3-TEX-I-1D451",d:"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"}),e.exports.jsx(s.path,{id:"MJX-3-TEX-N-2217",d:"M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"}),e.exports.jsx(s.path,{id:"MJX-3-TEX-N-28",d:"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"}),e.exports.jsx(s.path,{id:"MJX-3-TEX-I-1D45B",d:"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"}),e.exports.jsx(s.path,{id:"MJX-3-TEX-N-5E",d:"M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z"}),e.exports.jsx(s.path,{id:"MJX-3-TEX-N-22C5",d:"M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"}),e.exports.jsx(s.path,{id:"MJX-3-TEX-I-1D43F",d:"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"}),e.exports.jsx(s.path,{id:"MJX-3-TEX-N-29",d:"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"})]}),e.exports.jsx(s.g,{stroke:"currentColor",fill:"currentColor",strokeWidth:"0",transform:"scale(1,-1)",children:e.exports.jsxs(s.g,{"data-mml-node":"math",children:[e.exports.jsxs(s.g,{"data-mml-node":"msub",children:[e.exports.jsx(s.g,{"data-mml-node":"mi",children:e.exports.jsx(s.use,{"data-c":"1D43E",xlinkHref:"#MJX-3-TEX-I-1D43E"})}),e.exports.jsx(s.g,{"data-mml-node":"mi",transform:"translate(882,-150) scale(0.707)",children:e.exports.jsx(s.use,{"data-c":"1D451",xlinkHref:"#MJX-3-TEX-I-1D451"})})]}),e.exports.jsx(s.g,{"data-mml-node":"mo",transform:"translate(1521.9,0)",children:e.exports.jsx(s.use,{"data-c":"2217",xlinkHref:"#MJX-3-TEX-N-2217"})}),e.exports.jsx(s.g,{"data-mml-node":"mo",transform:"translate(2244.1,0)",children:e.exports.jsx(s.use,{"data-c":"28",xlinkHref:"#MJX-3-TEX-N-28"})}),e.exports.jsx(s.g,{"data-mml-node":"TeXAtom","data-mjx-texclass":"ORD",transform:"translate(2633.1,0)",children:e.exports.jsxs(s.g,{"data-mml-node":"mover",children:[e.exports.jsx(s.g,{"data-mml-node":"mi",children:e.exports.jsx(s.use,{"data-c":"1D45B",xlinkHref:"#MJX-3-TEX-I-1D45B"})}),e.exports.jsx(s.g,{"data-mml-node":"mo",transform:"translate(300,16) translate(-250 0)",children:e.exports.jsx(s.use,{"data-c":"5E",xlinkHref:"#MJX-3-TEX-N-5E"})})]})}),e.exports.jsx(s.g,{"data-mml-node":"mo",transform:"translate(3455.4,0)",children:e.exports.jsx(s.use,{"data-c":"22C5",xlinkHref:"#MJX-3-TEX-N-22C5"})}),e.exports.jsx(s.g,{"data-mml-node":"TeXAtom","data-mjx-texclass":"ORD",transform:"translate(3955.6,0)",children:e.exports.jsxs(s.g,{"data-mml-node":"mover",children:[e.exports.jsx(s.g,{"data-mml-node":"mi",children:e.exports.jsx(s.use,{"data-c":"1D43F",xlinkHref:"#MJX-3-TEX-I-1D43F"})}),e.exports.jsx(s.g,{"data-mml-node":"mo",transform:"translate(368.3,257) translate(-250 0)",children:e.exports.jsx(s.use,{"data-c":"5E",xlinkHref:"#MJX-3-TEX-N-5E"})})]})}),e.exports.jsx(s.g,{"data-mml-node":"mo",transform:"translate(4636.6,0)",children:e.exports.jsx(s.use,{"data-c":"29",xlinkHref:"#MJX-3-TEX-N-29"})})]})})]})})}),", where:"]}),`
`,e.exports.jsxs(s.ul,{children:[`
`,e.exports.jsxs(s.li,{children:[e.exports.jsx(s.span,{className:"math math-inline",children:e.exports.jsx(s["mjx-container"],{className:"MathJax",jax:"SVG",children:e.exports.jsxs(s.svg,{style:{verticalAlign:"-0.355ex"},xmlns:"http://www.w3.org/2000/svg",width:"2.94ex",height:"1.901ex",role:"img",focusable:"false",viewBox:"0 -683 1299.7 840.1",xmlnsXlink:"http://www.w3.org/1999/xlink",children:[e.exports.jsxs(s.defs,{children:[e.exports.jsx(s.path,{id:"MJX-4-TEX-I-1D43E",d:"M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z"}),e.exports.jsx(s.path,{id:"MJX-4-TEX-I-1D451",d:"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"})]}),e.exports.jsx(s.g,{stroke:"currentColor",fill:"currentColor",strokeWidth:"0",transform:"scale(1,-1)",children:e.exports.jsx(s.g,{"data-mml-node":"math",children:e.exports.jsxs(s.g,{"data-mml-node":"msub",children:[e.exports.jsx(s.g,{"data-mml-node":"mi",children:e.exports.jsx(s.use,{"data-c":"1D43E",xlinkHref:"#MJX-4-TEX-I-1D43E"})}),e.exports.jsx(s.g,{"data-mml-node":"mi",transform:"translate(882,-150) scale(0.707)",children:e.exports.jsx(s.use,{"data-c":"1D451",xlinkHref:"#MJX-4-TEX-I-1D451"})})]})})})]})})})," is the diffuse coefficient,"]}),`
`,e.exports.jsxs(s.li,{children:[e.exports.jsx(s.span,{className:"math math-inline",children:e.exports.jsx(s["mjx-container"],{className:"MathJax",jax:"SVG",children:e.exports.jsxs(s.svg,{style:{verticalAlign:"-0.025ex"},xmlns:"http://www.w3.org/2000/svg",width:"1.357ex",height:"1.025ex",role:"img",focusable:"false",viewBox:"0 -442 600 453",xmlnsXlink:"http://www.w3.org/1999/xlink",children:[e.exports.jsx(s.defs,{children:e.exports.jsx(s.path,{id:"MJX-5-TEX-I-1D45B",d:"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"})}),e.exports.jsx(s.g,{stroke:"currentColor",fill:"currentColor",strokeWidth:"0",transform:"scale(1,-1)",children:e.exports.jsx(s.g,{"data-mml-node":"math",children:e.exports.jsx(s.g,{"data-mml-node":"mi",children:e.exports.jsx(s.use,{"data-c":"1D45B",xlinkHref:"#MJX-5-TEX-I-1D45B"})})})})]})})})," is the surface normal, and"]}),`
`,e.exports.jsxs(s.li,{children:[e.exports.jsx(s.span,{className:"math math-inline",children:e.exports.jsx(s["mjx-container"],{className:"MathJax",jax:"SVG",children:e.exports.jsxs(s.svg,{style:{verticalAlign:"0"},xmlns:"http://www.w3.org/2000/svg",width:"1.541ex",height:"1.545ex",role:"img",focusable:"false",viewBox:"0 -683 681 683",xmlnsXlink:"http://www.w3.org/1999/xlink",children:[e.exports.jsx(s.defs,{children:e.exports.jsx(s.path,{id:"MJX-6-TEX-I-1D43F",d:"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"})}),e.exports.jsx(s.g,{stroke:"currentColor",fill:"currentColor",strokeWidth:"0",transform:"scale(1,-1)",children:e.exports.jsx(s.g,{"data-mml-node":"math",children:e.exports.jsx(s.g,{"data-mml-node":"mi",children:e.exports.jsx(s.use,{"data-c":"1D43F",xlinkHref:"#MJX-6-TEX-I-1D43F"})})})})]})})})," is the surface-to-light direction"]}),`
`]}),`
`,e.exports.jsxs(s.p,{children:["In our fragment shader, besides ",e.exports.jsx(s.span,{className:"math math-inline",children:e.exports.jsx(s["mjx-container"],{className:"MathJax",jax:"SVG",children:e.exports.jsxs(s.svg,{style:{verticalAlign:"-0.355ex"},xmlns:"http://www.w3.org/2000/svg",width:"2.94ex",height:"1.901ex",role:"img",focusable:"false",viewBox:"0 -683 1299.7 840.1",xmlnsXlink:"http://www.w3.org/1999/xlink",children:[e.exports.jsxs(s.defs,{children:[e.exports.jsx(s.path,{id:"MJX-7-TEX-I-1D43E",d:"M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z"}),e.exports.jsx(s.path,{id:"MJX-7-TEX-I-1D451",d:"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"})]}),e.exports.jsx(s.g,{stroke:"currentColor",fill:"currentColor",strokeWidth:"0",transform:"scale(1,-1)",children:e.exports.jsx(s.g,{"data-mml-node":"math",children:e.exports.jsxs(s.g,{"data-mml-node":"msub",children:[e.exports.jsx(s.g,{"data-mml-node":"mi",children:e.exports.jsx(s.use,{"data-c":"1D43E",xlinkHref:"#MJX-7-TEX-I-1D43E"})}),e.exports.jsx(s.g,{"data-mml-node":"mi",transform:"translate(882,-150) scale(0.707)",children:e.exports.jsx(s.use,{"data-c":"1D451",xlinkHref:"#MJX-7-TEX-I-1D451"})})]})})})]})})}),", we'll need the light's position (in the same coordinate space as the rest of our data). This can be passed in as a ",e.exports.jsx(s.strong,{children:"uniform"}),"."]}),`
`,e.exports.jsx(s.p,{children:"We'll also need our surface position and normal. Good thing we passed these from our vertex shader to our fragment shader! But, we have to be careful:"}),`
`,e.exports.jsxs(s.div,{className:"warning-callout callout",children:[e.exports.jsxs(s.p,{children:["When passing a vector from the vertex shader to the fragment shader, the process of rasterization and ",e.exports.jsx(s.strong,{children:"interpolation"})," can change the length of the vector."]}),e.exports.jsx(s.p,{children:e.exports.jsx(s.strong,{children:"It is therefore necessary to renormalize vectors in the fragment shader if you expect them to be normalized!"})})]}),`
`,e.exports.jsxs(s.div,{className:"task-callout callout",children:[e.exports.jsxs(s.p,{children:["You are given ",e.exports.jsx(s.code,{children:"m_kd"})," and ",e.exports.jsx(s.code,{children:"m_lightPos"})," as member variables in the ",e.exports.jsx(s.code,{children:"GLRenderer"})," class."]}),e.exports.jsx(s.p,{children:"Use this information to add the diffuse component of the Phong lighting equation to your fragment shader's output color."}),e.exports.jsxs(s.ul,{children:[`
`,e.exports.jsxs(s.li,{children:["You might find the ",e.exports.jsx(s.a,{href:"https://registry.khronos.org/OpenGL-Refpages/gl4/html/dot.xhtml",target:"_blank",rel:"noopener noreferrer",children:"dot"})," and ",e.exports.jsx(s.a,{href:"https://registry.khronos.org/OpenGL-Refpages/gl4/html/normalize.xhtml",target:"_blank",rel:"noopener noreferrer",children:"normalize"})," functions useful. These are built into GLSL."]}),`
`,e.exports.jsxs(s.li,{children:["Remember to clamp your dot product result to ",e.exports.jsx(s.code,{children:"[0, 1]"}),"."]}),`
`]}),e.exports.jsxs("details",{children:[e.exports.jsx("summary",{children:"Hint: Step-by-step process"}),e.exports.jsxs(s.div,{className:"error-callout callout",children:[e.exports.jsx(s.p,{children:"Please try these tasks on your own first, and only look at the hints if you get stuck!"}),e.exports.jsx(s.p,{children:"You will have to perfectly understand this process by the time you work on project 5."})]}),e.exports.jsxs(s.ol,{children:[`
`,e.exports.jsxs(s.li,{children:["In your fragment shader, declare the following uniforms:",`
`,e.exports.jsxs(s.ol,{children:[`
`,e.exports.jsxs(s.li,{children:["A ",e.exports.jsx(s.code,{children:"uniform float"})," to hold the diffuse coefficient, and"]}),`
`,e.exports.jsxs(s.li,{children:["A ",e.exports.jsx(s.code,{children:"uniform vec4"})," to hold the world-space light position."]}),`
`]}),`
`]}),`
`,e.exports.jsxs(s.li,{children:["In ",e.exports.jsx(s.code,{children:"paintGL()"}),", pass the following into your shader:",`
`,e.exports.jsxs(s.ol,{children:[`
`,e.exports.jsxs(s.li,{children:[e.exports.jsx(s.code,{children:"m_kd"}),", and"]}),`
`,e.exports.jsxs(s.li,{children:[e.exports.jsx(s.code,{children:"m_lightPos"}),"."]}),`
`]}),`
`]}),`
`,e.exports.jsxs(s.li,{children:["Back in your fragment shader, calculate the surface-to-light direction vector ",e.exports.jsx(s.span,{className:"math math-inline",children:e.exports.jsx(s["mjx-container"],{className:"MathJax",jax:"SVG",children:e.exports.jsxs(s.svg,{style:{verticalAlign:"0"},xmlns:"http://www.w3.org/2000/svg",width:"1.541ex",height:"1.545ex",role:"img",focusable:"false",viewBox:"0 -683 681 683",xmlnsXlink:"http://www.w3.org/1999/xlink",children:[e.exports.jsx(s.defs,{children:e.exports.jsx(s.path,{id:"MJX-8-TEX-I-1D43F",d:"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"})}),e.exports.jsx(s.g,{stroke:"currentColor",fill:"currentColor",strokeWidth:"0",transform:"scale(1,-1)",children:e.exports.jsx(s.g,{"data-mml-node":"math",children:e.exports.jsx(s.g,{"data-mml-node":"mi",children:e.exports.jsx(s.use,{"data-c":"1D43F",xlinkHref:"#MJX-8-TEX-I-1D43F"})})})})]})})}),"."]}),`
`,e.exports.jsxs(s.li,{children:["Then, calculate the diffuse intensity using ",e.exports.jsx(s.code,{children:"dot()"})," and the ",e.exports.jsx(s.span,{className:"math math-inline",children:e.exports.jsx(s["mjx-container"],{className:"MathJax",jax:"SVG",children:e.exports.jsxs(s.svg,{style:{verticalAlign:"0"},xmlns:"http://www.w3.org/2000/svg",width:"1.541ex",height:"1.545ex",role:"img",focusable:"false",viewBox:"0 -683 681 683",xmlnsXlink:"http://www.w3.org/1999/xlink",children:[e.exports.jsx(s.defs,{children:e.exports.jsx(s.path,{id:"MJX-9-TEX-I-1D43F",d:"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"})}),e.exports.jsx(s.g,{stroke:"currentColor",fill:"currentColor",strokeWidth:"0",transform:"scale(1,-1)",children:e.exports.jsx(s.g,{"data-mml-node":"math",children:e.exports.jsx(s.g,{"data-mml-node":"mi",children:e.exports.jsx(s.use,{"data-c":"1D43F",xlinkHref:"#MJX-9-TEX-I-1D43F"})})})})]})})})," and the surface normal. Remember to ",e.exports.jsx(s.code,{children:"normalize()"})," those vectors beforehand!"]}),`
`,e.exports.jsx(s.li,{children:"Finally, add the diffuse intensity to the output color."}),`
`]})]})]}),`
`,e.exports.jsx(t,{images:[{src:"/labs/lab10/outputAfterDiffuse.png",alt:"TODO"}],figNumber:9,targetWidth:"50%",figCaption:"Expected output after adding both the ambient and diffuse components."}),`
`,e.exports.jsx(s.h3,{id:"specular-component",children:e.exports.jsx(s.a,{href:"#specular-component",children:"Specular Component"})}),`
`,e.exports.jsx(s.p,{children:"Finally, let's add the specular component of the illumination model to our fragment shader."}),`
`,e.exports.jsx(t,{images:[{src:"/labs/lab10/specularImage.png",alt:"TODO"}],figNumber:10,targetWidth:"50%",figCaption:"The specular component is proportional to the dot product between the reflection and the eye direction, raised to a power"}),`
`,e.exports.jsxs(s.p,{children:["Recall that the specular component in our simplified Phong model is ",e.exports.jsx(s.span,{className:"math math-inline",children:e.exports.jsx(s["mjx-container"],{className:"MathJax",jax:"SVG",children:e.exports.jsxs(s.svg,{style:{verticalAlign:"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"11.308ex",height:"2.943ex",role:"img",focusable:"false",viewBox:"0 -1051 4998 1301",xmlnsXlink:"http://www.w3.org/1999/xlink",children:[e.exports.jsxs(s.defs,{children:[e.exports.jsx(s.path,{id:"MJX-10-TEX-I-1D43E",d:"M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z"}),e.exports.jsx(s.path,{id:"MJX-10-TEX-I-1D460",d:"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"}),e.exports.jsx(s.path,{id:"MJX-10-TEX-N-28",d:"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"}),e.exports.jsx(s.path,{id:"MJX-10-TEX-I-1D445",d:"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"}),e.exports.jsx(s.path,{id:"MJX-10-TEX-N-5E",d:"M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z"}),e.exports.jsx(s.path,{id:"MJX-10-TEX-N-22C5",d:"M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"}),e.exports.jsx(s.path,{id:"MJX-10-TEX-I-1D438",d:"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z"}),e.exports.jsx(s.path,{id:"MJX-10-TEX-N-29",d:"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"}),e.exports.jsx(s.path,{id:"MJX-10-TEX-I-1D441",d:"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"})]}),e.exports.jsx(s.g,{stroke:"currentColor",fill:"currentColor",strokeWidth:"0",transform:"scale(1,-1)",children:e.exports.jsxs(s.g,{"data-mml-node":"math",children:[e.exports.jsxs(s.g,{"data-mml-node":"msub",children:[e.exports.jsx(s.g,{"data-mml-node":"mi",children:e.exports.jsx(s.use,{"data-c":"1D43E",xlinkHref:"#MJX-10-TEX-I-1D43E"})}),e.exports.jsx(s.g,{"data-mml-node":"mi",transform:"translate(882,-150) scale(0.707)",children:e.exports.jsx(s.use,{"data-c":"1D460",xlinkHref:"#MJX-10-TEX-I-1D460"})})]}),e.exports.jsx(s.g,{"data-mml-node":"mo",transform:"translate(1263.6,0)",children:e.exports.jsx(s.use,{"data-c":"28",xlinkHref:"#MJX-10-TEX-N-28"})}),e.exports.jsx(s.g,{"data-mml-node":"TeXAtom","data-mjx-texclass":"ORD",transform:"translate(1652.6,0)",children:e.exports.jsxs(s.g,{"data-mml-node":"mover",children:[e.exports.jsx(s.g,{"data-mml-node":"mi",children:e.exports.jsx(s.use,{"data-c":"1D445",xlinkHref:"#MJX-10-TEX-I-1D445"})}),e.exports.jsx(s.g,{"data-mml-node":"mo",transform:"translate(462.8,257) translate(-250 0)",children:e.exports.jsx(s.use,{"data-c":"5E",xlinkHref:"#MJX-10-TEX-N-5E"})})]})}),e.exports.jsx(s.g,{"data-mml-node":"mo",transform:"translate(2633.9,0)",children:e.exports.jsx(s.use,{"data-c":"22C5",xlinkHref:"#MJX-10-TEX-N-22C5"})}),e.exports.jsx(s.g,{"data-mml-node":"TeXAtom","data-mjx-texclass":"ORD",transform:"translate(3134.1,0)",children:e.exports.jsxs(s.g,{"data-mml-node":"mover",children:[e.exports.jsx(s.g,{"data-mml-node":"mi",children:e.exports.jsx(s.use,{"data-c":"1D438",xlinkHref:"#MJX-10-TEX-I-1D438"})}),e.exports.jsx(s.g,{"data-mml-node":"mo",transform:"translate(471.8,254) translate(-250 0)",children:e.exports.jsx(s.use,{"data-c":"5E",xlinkHref:"#MJX-10-TEX-N-5E"})})]})}),e.exports.jsxs(s.g,{"data-mml-node":"msup",transform:"translate(3898.1,0)",children:[e.exports.jsx(s.g,{"data-mml-node":"mo",children:e.exports.jsx(s.use,{"data-c":"29",xlinkHref:"#MJX-10-TEX-N-29"})}),e.exports.jsx(s.g,{"data-mml-node":"mi",transform:"translate(422,363) scale(0.707)",children:e.exports.jsx(s.use,{"data-c":"1D441",xlinkHref:"#MJX-10-TEX-I-1D441"})})]})]})})]})})}),", where:"]}),`
`,e.exports.jsxs(s.ul,{children:[`
`,e.exports.jsxs(s.li,{children:[e.exports.jsx(s.span,{className:"math math-inline",children:e.exports.jsx(s["mjx-container"],{className:"MathJax",jax:"SVG",children:e.exports.jsxs(s.svg,{style:{verticalAlign:"-0.355ex"},xmlns:"http://www.w3.org/2000/svg",width:"2.859ex",height:"1.901ex",role:"img",focusable:"false",viewBox:"0 -683 1263.6 840.1",xmlnsXlink:"http://www.w3.org/1999/xlink",children:[e.exports.jsxs(s.defs,{children:[e.exports.jsx(s.path,{id:"MJX-11-TEX-I-1D43E",d:"M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z"}),e.exports.jsx(s.path,{id:"MJX-11-TEX-I-1D460",d:"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"})]}),e.exports.jsx(s.g,{stroke:"currentColor",fill:"currentColor",strokeWidth:"0",transform:"scale(1,-1)",children:e.exports.jsx(s.g,{"data-mml-node":"math",children:e.exports.jsxs(s.g,{"data-mml-node":"msub",children:[e.exports.jsx(s.g,{"data-mml-node":"mi",children:e.exports.jsx(s.use,{"data-c":"1D43E",xlinkHref:"#MJX-11-TEX-I-1D43E"})}),e.exports.jsx(s.g,{"data-mml-node":"mi",transform:"translate(882,-150) scale(0.707)",children:e.exports.jsx(s.use,{"data-c":"1D460",xlinkHref:"#MJX-11-TEX-I-1D460"})})]})})})]})})})," is the specular coefficient,"]}),`
`,e.exports.jsxs(s.li,{children:[e.exports.jsx(s.span,{className:"math math-inline",children:e.exports.jsx(s["mjx-container"],{className:"MathJax",jax:"SVG",children:e.exports.jsxs(s.svg,{style:{verticalAlign:"-0.048ex"},xmlns:"http://www.w3.org/2000/svg",width:"1.717ex",height:"1.593ex",role:"img",focusable:"false",viewBox:"0 -683 759 704",xmlnsXlink:"http://www.w3.org/1999/xlink",children:[e.exports.jsx(s.defs,{children:e.exports.jsx(s.path,{id:"MJX-12-TEX-I-1D445",d:"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"})}),e.exports.jsx(s.g,{stroke:"currentColor",fill:"currentColor",strokeWidth:"0",transform:"scale(1,-1)",children:e.exports.jsx(s.g,{"data-mml-node":"math",children:e.exports.jsx(s.g,{"data-mml-node":"mi",children:e.exports.jsx(s.use,{"data-c":"1D445",xlinkHref:"#MJX-12-TEX-I-1D445"})})})})]})})})," is the reflected light vector,"]}),`
`,e.exports.jsxs(s.li,{children:[e.exports.jsx(s.span,{className:"math math-inline",children:e.exports.jsx(s["mjx-container"],{className:"MathJax",jax:"SVG",children:e.exports.jsxs(s.svg,{style:{verticalAlign:"0"},xmlns:"http://www.w3.org/2000/svg",width:"1.729ex",height:"1.538ex",role:"img",focusable:"false",viewBox:"0 -680 764 680",xmlnsXlink:"http://www.w3.org/1999/xlink",children:[e.exports.jsx(s.defs,{children:e.exports.jsx(s.path,{id:"MJX-13-TEX-I-1D438",d:"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z"})}),e.exports.jsx(s.g,{stroke:"currentColor",fill:"currentColor",strokeWidth:"0",transform:"scale(1,-1)",children:e.exports.jsx(s.g,{"data-mml-node":"math",children:e.exports.jsx(s.g,{"data-mml-node":"mi",children:e.exports.jsx(s.use,{"data-c":"1D438",xlinkHref:"#MJX-13-TEX-I-1D438"})})})})]})})})," is the surface-to-camera direction, and"]}),`
`,e.exports.jsxs(s.li,{children:[e.exports.jsx(s.span,{className:"math math-inline",children:e.exports.jsx(s["mjx-container"],{className:"MathJax",jax:"SVG",children:e.exports.jsxs(s.svg,{style:{verticalAlign:"0"},xmlns:"http://www.w3.org/2000/svg",width:"2.009ex",height:"1.545ex",role:"img",focusable:"false",viewBox:"0 -683 888 683",xmlnsXlink:"http://www.w3.org/1999/xlink",children:[e.exports.jsx(s.defs,{children:e.exports.jsx(s.path,{id:"MJX-14-TEX-I-1D441",d:"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"})}),e.exports.jsx(s.g,{stroke:"currentColor",fill:"currentColor",strokeWidth:"0",transform:"scale(1,-1)",children:e.exports.jsx(s.g,{"data-mml-node":"math",children:e.exports.jsx(s.g,{"data-mml-node":"mi",children:e.exports.jsx(s.use,{"data-c":"1D441",xlinkHref:"#MJX-14-TEX-I-1D441"})})})})]})})})," is the specular exponent (aka shininess)."]}),`
`]}),`
`,e.exports.jsx(s.p,{children:"This is just more of the same from the previous task. You can surely figure it out!"}),`
`,e.exports.jsxs(s.div,{className:"task-callout callout",children:[e.exports.jsxs(s.p,{children:["You are given ",e.exports.jsx(s.code,{children:"m_ks"})," and ",e.exports.jsx(s.code,{children:"m_shininess"})," as member variables in the ",e.exports.jsx(s.code,{children:"GLRenderer"})," class."]}),e.exports.jsx(s.div,{className:"warning-callout callout",children:e.exports.jsxs(s.p,{children:["You are ",e.exports.jsx(s.em,{children:"not"})," given the camera position, but you do already have a ",e.exports.jsx(s.code,{children:"m_view"}),"... How can you get the camera's position? Should you compute it in the CPU, or in your shader?"]})}),e.exports.jsx(s.p,{children:"Use this information to add the specular component of the Phong lighting equation to your fragment shader's output color."}),e.exports.jsxs(s.ul,{children:[`
`,e.exports.jsxs(s.li,{children:["You might find the ",e.exports.jsx(s.a,{href:"https://registry.khronos.org/OpenGL-Refpages/gl4/html/pow.xhtml",target:"_blank",rel:"noopener noreferrer",children:"pow"})," and ",e.exports.jsx(s.a,{href:"https://registry.khronos.org/OpenGL-Refpages/gl4/html/reflect.xhtml",target:"_blank",rel:"noopener noreferrer",children:"reflect"})," functions useful. These are built into GLSL."]}),`
`,e.exports.jsxs(s.li,{children:["Remember to clamp your dot product result to ",e.exports.jsx(s.code,{children:"[0, 1]"}),"."]}),`
`]}),e.exports.jsxs("details",{children:[e.exports.jsx("summary",{children:"Hint: Step-by-step process"}),e.exports.jsxs(s.div,{className:"error-callout callout",children:[e.exports.jsx(s.p,{children:"Please try these tasks on your own first, and only look at the hints if you get stuck!"}),e.exports.jsx(s.p,{children:"You will have to perfectly understand this process by the time you work on project 5."})]}),e.exports.jsxs(s.ol,{children:[`
`,e.exports.jsxs(s.li,{children:["In your fragment shader, declare the following uniforms:",`
`,e.exports.jsxs(s.ol,{children:[`
`,e.exports.jsxs(s.li,{children:["A ",e.exports.jsx(s.code,{children:"uniform float"})," to hold the specular coefficient,"]}),`
`,e.exports.jsxs(s.li,{children:["A ",e.exports.jsx(s.code,{children:"uniform float"})," to hold the shininess, and"]}),`
`,e.exports.jsxs(s.li,{children:["A ",e.exports.jsx(s.code,{children:"uniform vec4"})," to hold the world-space camera position."]}),`
`]}),`
`]}),`
`,e.exports.jsxs(s.li,{children:["In ",e.exports.jsx(s.code,{children:"paintGL()"}),", pass the following into your shader:",`
`,e.exports.jsxs(s.ol,{children:[`
`,e.exports.jsxs(s.li,{children:[e.exports.jsx(s.code,{children:"m_ks"}),","]}),`
`,e.exports.jsxs(s.li,{children:[e.exports.jsx(s.code,{children:"m_shininess"}),", and"]}),`
`,e.exports.jsxs(s.li,{children:["The world-space camera position, obtained using by applying ",e.exports.jsx(s.code,{children:"inverse(m_view)"})," on the origin."]}),`
`]}),`
`]}),`
`,e.exports.jsxs(s.li,{children:["Back in your fragment shader, calculate the reflected light vector ",e.exports.jsx(s.span,{className:"math math-inline",children:e.exports.jsx(s["mjx-container"],{className:"MathJax",jax:"SVG",children:e.exports.jsxs(s.svg,{style:{verticalAlign:"-0.048ex"},xmlns:"http://www.w3.org/2000/svg",width:"1.717ex",height:"1.593ex",role:"img",focusable:"false",viewBox:"0 -683 759 704",xmlnsXlink:"http://www.w3.org/1999/xlink",children:[e.exports.jsx(s.defs,{children:e.exports.jsx(s.path,{id:"MJX-15-TEX-I-1D445",d:"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"})}),e.exports.jsx(s.g,{stroke:"currentColor",fill:"currentColor",strokeWidth:"0",transform:"scale(1,-1)",children:e.exports.jsx(s.g,{"data-mml-node":"math",children:e.exports.jsx(s.g,{"data-mml-node":"mi",children:e.exports.jsx(s.use,{"data-c":"1D445",xlinkHref:"#MJX-15-TEX-I-1D445"})})})})]})})})," in the fragment shader using the ",e.exports.jsx(s.code,{children:"reflect()"})," function."]}),`
`,e.exports.jsxs(s.li,{children:["Next, calculate the surface-to-camera direction vector ",e.exports.jsx(s.span,{className:"math math-inline",children:e.exports.jsx(s["mjx-container"],{className:"MathJax",jax:"SVG",children:e.exports.jsxs(s.svg,{style:{verticalAlign:"0"},xmlns:"http://www.w3.org/2000/svg",width:"1.729ex",height:"1.538ex",role:"img",focusable:"false",viewBox:"0 -680 764 680",xmlnsXlink:"http://www.w3.org/1999/xlink",children:[e.exports.jsx(s.defs,{children:e.exports.jsx(s.path,{id:"MJX-16-TEX-I-1D438",d:"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z"})}),e.exports.jsx(s.g,{stroke:"currentColor",fill:"currentColor",strokeWidth:"0",transform:"scale(1,-1)",children:e.exports.jsx(s.g,{"data-mml-node":"math",children:e.exports.jsx(s.g,{"data-mml-node":"mi",children:e.exports.jsx(s.use,{"data-c":"1D438",xlinkHref:"#MJX-16-TEX-I-1D438"})})})})]})})}),"."]}),`
`,e.exports.jsxs(s.li,{children:["Then, calculate the specular intensity using ",e.exports.jsx(s.code,{children:"dot()"})," and the two vectors above, as well as the exponential function ",e.exports.jsx(s.code,{children:"pow()"}),"."]}),`
`,e.exports.jsx(s.li,{children:"Finally, add the specular intensity to the output color."}),`
`]})]})]}),`
`,e.exports.jsx(s.h2,{id:"end",children:e.exports.jsx(s.a,{href:"#end",children:"End"})}),`
`,e.exports.jsx(s.p,{children:"Congrats on finishing the Shaders lab!"}),`
`,e.exports.jsx(t,{images:[{src:"/labs/lab10/outputAfterSpecular.png",alt:"TODO"}],figNumber:11,targetWidth:"50%",figCaption:"Final expected output, using the default shininess value of 15."}),`
`,e.exports.jsx(s.p,{children:"Once your output looks like this, it's time to submit your code and get checked off by a TA."}),`
`,e.exports.jsx(s.h2,{id:"submission",children:e.exports.jsx(s.a,{href:"#submission",children:"Submission"})}),`
`,e.exports.jsxs(s.p,{children:['Submit your GitHub link and commit ID to the "Lab 10: Shaders" assignment on Gradescope, ',e.exports.jsx(s.strong,{children:"then get checked off by a TA at hours"}),"."]}),`
`,e.exports.jsxs(s.p,{children:["Reference the GitHub + Gradescope Guide ",e.exports.jsx(s.a,{href:"/website-fall-23/docs/github-gradescope-guide#handing-in-assignments",children:"here"}),"."]}),`
`,e.exports.jsx(n,{}),e.exports.jsx(s.style,{children:`
mjx-container[jax="SVG"] {
  direction: ltr;
}

mjx-container[jax="SVG"] > svg {
  overflow: visible;
  min-height: 1px;
  min-width: 1px;
}

mjx-container[jax="SVG"] > svg a {
  fill: blue;
  stroke: blue;
}

mjx-container[jax="SVG"][display="true"] {
  display: block;
  text-align: center;
  margin: 1em 0;
}

mjx-container[jax="SVG"][display="true"][width="full"] {
  display: flex;
}

mjx-container[jax="SVG"][justify="left"] {
  text-align: left;
}

mjx-container[jax="SVG"][justify="right"] {
  text-align: right;
}

g[data-mml-node="merror"] > g {
  fill: red;
  stroke: red;
}

g[data-mml-node="merror"] > rect[data-background] {
  fill: yellow;
  stroke: none;
}

g[data-mml-node="mtable"] > line[data-line], svg[data-table] > g > line[data-line] {
  stroke-width: 70px;
  fill: none;
}

g[data-mml-node="mtable"] > rect[data-frame], svg[data-table] > g > rect[data-frame] {
  stroke-width: 70px;
  fill: none;
}

g[data-mml-node="mtable"] > .mjx-dashed, svg[data-table] > g > .mjx-dashed {
  stroke-dasharray: 140;
}

g[data-mml-node="mtable"] > .mjx-dotted, svg[data-table] > g > .mjx-dotted {
  stroke-linecap: round;
  stroke-dasharray: 0,140;
}

g[data-mml-node="mtable"] > g > svg {
  overflow: visible;
}

[jax="SVG"] mjx-tool {
  display: inline-block;
  position: relative;
  width: 0;
  height: 0;
}

[jax="SVG"] mjx-tool > mjx-tip {
  position: absolute;
  top: 0;
  left: 0;
}

mjx-tool > mjx-tip {
  display: inline-block;
  padding: .2em;
  border: 1px solid #888;
  font-size: 70%;
  background-color: #F8F8F8;
  color: black;
  box-shadow: 2px 2px 5px #AAAAAA;
}

g[data-mml-node="maction"][data-toggle] {
  cursor: pointer;
}

mjx-status {
  display: block;
  position: fixed;
  left: 1em;
  bottom: 1em;
  min-width: 25%;
  padding: .2em .4em;
  border: 1px solid #888;
  font-size: 90%;
  background-color: #F8F8F8;
  color: black;
}

foreignObject[data-mjx-xml] {
  font-family: initial;
  line-height: normal;
  overflow: visible;
}

mjx-container[jax="SVG"] path[data-c], mjx-container[jax="SVG"] use[data-c] {
  stroke-width: 3;
}
`})]})]})}function d(r={}){const{wrapper:s}=r.components||{};return s?e.exports.jsx(s,Object.assign({},r,{children:e.exports.jsx(o,r)})):o(r)}export{d as default,x as documentProps};
